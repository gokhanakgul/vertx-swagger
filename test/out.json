{
  "appVersion": "1.0.0",
  "generatorClass": "com.github.phiz71.vertx.swagger.codegen.JavaVertXServerGenerator",
  "supportJava6": false,
  "groupId": "com.optimo",
  "invokerPackage": "io.swagger.server.api",
  "apiFolder": "io/swagger/server/api/verticle",
  "developerEmail": "apiteam@swagger.io",
  "jdbcPersistence": "true",
  "generateModelTests": true,
  "swagger": {
    "swagger": "2.0",
    "info": {
      "description": "Profile API definition",
      "version": "1.0.0",
      "title": "Profile API"
    },
    "host": "www.anket.io",
    "basePath": "/api",
    "tags": [
      {
        "name": "profile",
        "description": "Everything about a Profile"
      }
    ],
    "schemes": [
      "http"
    ],
    "paths": {
      "/profile": {
        "post": {
          "tags": [
            "profile"
          ],
          "summary": "Create profile",
          "description": "This can only be done by the logged in profile.",
          "operationId": "create",
          "produces": [
            "application/xml",
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "Created profile object",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Profile"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            },
            "default": {
              "description": "successful operation"
            }
          },
          "x-contentType": "application/json",
          "x-accepts": "application/json",
          "x-serviceId": "create",
          "x-serviceIduC": "CREATE",
          "x-serviceId-varName": "CREATE_SERVICE_ID",
          "x-isPost": true,
          "x-isGet": false,
          "x-isPut": false,
          "x-isPatch": false,
          "x-isHead": false,
          "x-isDelete": false,
          "x-serviceId-SQL": "INSERT INTO TABLE_NAME"
        }
      },
      "/profile/changePassword": {
        "put": {
          "tags": [
            "profile"
          ],
          "summary": "Change passwords of profile",
          "operationId": "changePassword",
          "produces": [
            "application/xml",
            "application/json"
          ],
          "parameters": [
            {
              "name": "profilename",
              "in": "formData",
              "description": "The profile name",
              "required": true,
              "type": "string"
            },
            {
              "name": "currentPassword",
              "in": "formData",
              "description": "Present password of the profile",
              "required": true,
              "type": "string"
            },
            {
              "name": "newPassword",
              "in": "formData",
              "description": "New password of the profile",
              "required": true,
              "type": "string",
              "maxLength": 50,
              "minLength": 8
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            },
            "400": {
              "description": "Invalid profilename/password supplied"
            }
          },
          "x-contentType": "application/x-www-form-urlencoded",
          "x-accepts": "application/json",
          "x-serviceId": "changePassword",
          "x-serviceIduC": "CHANGEPASSWORD",
          "x-serviceId-varName": "CHANGEPASSWORD_SERVICE_ID",
          "x-isPost": false,
          "x-isGet": false,
          "x-isPut": true,
          "x-isPatch": false,
          "x-isHead": false,
          "x-isDelete": false,
          "x-serviceId-SQL": "UPDATE TABLE_NAME SET "
        }
      },
      "/profile/login": {
        "post": {
          "tags": [
            "profile"
          ],
          "summary": "Logs profile into the system",
          "description": "",
          "operationId": "loginProfile",
          "produces": [
            "application/xml",
            "application/json"
          ],
          "parameters": [
            {
              "name": "profilename",
              "in": "formData",
              "description": "The profile name for login",
              "required": true,
              "type": "string"
            },
            {
              "name": "password",
              "in": "formData",
              "description": "The password for login in clear text",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "schema": {
                "type": "string"
              },
              "headers": {
                "X-Rate-Limit": {
                  "type": "integer",
                  "format": "int32",
                  "description": "calls per hour allowed by the profile"
                },
                "X-Expires-After": {
                  "type": "string",
                  "format": "date-time",
                  "description": "date in UTC when toekn expires"
                }
              }
            },
            "400": {
              "description": "Invalid profilename/password supplied"
            }
          },
          "x-contentType": "application/x-www-form-urlencoded",
          "x-accepts": "application/json",
          "x-serviceId": "loginProfile",
          "x-serviceIduC": "LOGINPROFILE",
          "x-serviceId-varName": "LOGINPROFILE_SERVICE_ID",
          "x-isPost": true,
          "x-isGet": false,
          "x-isPut": false,
          "x-isPatch": false,
          "x-isHead": false,
          "x-isDelete": false,
          "x-serviceId-SQL": "INSERT INTO TABLE_NAME"
        }
      },
      "/profile/logout": {
        "get": {
          "tags": [
            "profile"
          ],
          "summary": "Logs out current logged in profile session",
          "description": "",
          "operationId": "logoutProfile",
          "produces": [
            "application/xml",
            "application/json"
          ],
          "parameters": [],
          "responses": {
            "default": {
              "description": "successful operation"
            }
          },
          "x-contentType": "application/json",
          "x-accepts": "application/json",
          "x-serviceId": "logoutProfile",
          "x-serviceIduC": "LOGOUTPROFILE",
          "x-serviceId-varName": "LOGOUTPROFILE_SERVICE_ID",
          "x-isPost": false,
          "x-isGet": true,
          "x-isPut": false,
          "x-isPatch": false,
          "x-isHead": false,
          "x-isDelete": false,
          "x-serviceId-SQL": "SELECT * FROM TABLE_NAME"
        }
      },
      "/profile/{profilename}": {
        "get": {
          "tags": [
            "profile"
          ],
          "summary": "Get profile by profile name",
          "description": "",
          "operationId": "findProfileByProfilename",
          "produces": [
            "application/xml",
            "application/json"
          ],
          "parameters": [
            {
              "name": "profilename",
              "in": "path",
              "description": "The name that needs to be fetched. Use profile1 for testing. ",
              "required": true,
              "type": "string",
              "maximum": 255
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "schema": {
                "$ref": "#/definitions/Profile"
              }
            },
            "400": {
              "description": "Invalid profilename supplied"
            },
            "404": {
              "description": "Profile not found"
            }
          },
          "x-contentType": "application/json",
          "x-accepts": "application/json",
          "x-serviceId": "findProfileByProfilename",
          "x-serviceIduC": "FINDPROFILEBYPROFILENAME",
          "x-serviceId-varName": "FINDPROFILEBYPROFILENAME_SERVICE_ID",
          "x-isPost": false,
          "x-isGet": true,
          "x-isPut": false,
          "x-isPatch": false,
          "x-isHead": false,
          "x-isDelete": false,
          "x-serviceId-SQL": "SELECT * FROM TABLE_NAME WHERE profilename = ?"
        },
        "put": {
          "tags": [
            "profile"
          ],
          "summary": "Updated profile",
          "description": "This can only be done by the logged in profile.",
          "operationId": "updateProfile",
          "produces": [
            "application/xml",
            "application/json"
          ],
          "parameters": [
            {
              "name": "profilename",
              "in": "path",
              "description": "name that need to be deleted",
              "required": true,
              "type": "string"
            },
            {
              "in": "body",
              "name": "body",
              "description": "Updated profile object",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Profile"
              }
            }
          ],
          "responses": {
            "400": {
              "description": "Invalid profile supplied"
            },
            "404": {
              "description": "Profile not found"
            }
          },
          "x-contentType": "application/json",
          "x-accepts": "application/json",
          "x-serviceId": "updateProfile",
          "x-serviceIduC": "UPDATEPROFILE",
          "x-serviceId-varName": "UPDATEPROFILE_SERVICE_ID",
          "x-isPost": false,
          "x-isGet": false,
          "x-isPut": true,
          "x-isPatch": false,
          "x-isHead": false,
          "x-isDelete": false,
          "x-serviceId-SQL": "UPDATE TABLE_NAME SET  WHERE profilename = ?"
        },
        "delete": {
          "tags": [
            "profile"
          ],
          "summary": "Delete profile",
          "description": "This can only be done by the logged in profile.",
          "operationId": "deleteProfile",
          "produces": [
            "application/xml",
            "application/json"
          ],
          "parameters": [
            {
              "name": "profilename",
              "in": "path",
              "description": "The name that needs to be deleted",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "400": {
              "description": "Invalid profilename supplied"
            },
            "404": {
              "description": "Profile not found"
            }
          },
          "x-contentType": "application/json",
          "x-accepts": "application/json",
          "x-serviceId": "deleteProfile",
          "x-serviceIduC": "DELETEPROFILE",
          "x-serviceId-varName": "DELETEPROFILE_SERVICE_ID",
          "x-isPost": false,
          "x-isGet": false,
          "x-isPut": false,
          "x-isPatch": false,
          "x-isHead": false,
          "x-isDelete": true,
          "x-serviceId-SQL": "DELETE FROM TABLE_NAME WHERE profilename = ?"
        }
      }
    },
    "definitions": {
      "ApiResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "Profile": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "integer",
            "format": "int64",
            "example": 12,
            "readOnly": true
          },
          "profilename": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "format": "pasword"
          },
          "phone": {
            "type": "string"
          },
          "profileStatus": {
            "type": "integer",
            "format": "int32",
            "description": "Profile Status"
          },
          "createAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updateAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "age": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "maximum": 200
          },
          "gender": {
            "type": "string",
            "default": "FEMALE",
            "enum": [
              "MALE",
              "FEMALE"
            ]
          }
        }
      }
    }
  },
  "generateApiTests": true,
  "serializableModel": false,
  "inputSpec": "swagger-profile.yml",
  "host": "www.anket.io",
  "artifactUrl": "https://github.com/swagger-api/swagger-codegen",
  "developerOrganization": "Swagger",
  "models": [
    {
      "importPath": "io.swagger.server.api.model.ModelApiResponse",
      "model": {
        "name": "ApiResponse",
        "classname": "ModelApiResponse",
        "classVarName": "_apiResponse",
        "modelJson": "{\n  \"type\" : \"object\",\n  \"properties\" : {\n    \"code\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\"\n    },\n    \"type\" : {\n      \"type\" : \"string\"\n    },\n    \"message\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
        "dataType": "Object",
        "classFilename": "ModelApiResponse",
        "vars": [
          {
            "baseName": "code",
            "getter": "getCode",
            "setter": "setCode",
            "datatype": "Integer",
            "datatypeWithEnum": "Integer",
            "dataFormat": "int32",
            "name": "code",
            "defaultValue": "null",
            "defaultValueWithParam": " = data.code;",
            "baseType": "Integer",
            "example": "null",
            "jsonSchema": "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": true,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": true,
            "isPrimitiveType": true,
            "isContainer": false,
            "isNotContainer": true,
            "isString": false,
            "isInteger": true,
            "isLong": false,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": false,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": false,
            "isReadOnly": false,
            "vendorExtensions": {},
            "hasValidation": false,
            "isInherited": false,
            "nameInCamelCase": "Code"
          },
          {
            "baseName": "type",
            "getter": "getType",
            "setter": "setType",
            "datatype": "String",
            "datatypeWithEnum": "String",
            "name": "type",
            "defaultValue": "null",
            "defaultValueWithParam": " = data.type;",
            "baseType": "String",
            "example": "null",
            "jsonSchema": "{\n  \"type\" : \"string\"\n}",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": true,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": true,
            "isPrimitiveType": true,
            "isContainer": false,
            "isNotContainer": true,
            "isString": true,
            "isInteger": false,
            "isLong": false,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": false,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": false,
            "isReadOnly": false,
            "vendorExtensions": {},
            "hasValidation": false,
            "isInherited": false,
            "nameInCamelCase": "Type"
          },
          {
            "baseName": "message",
            "getter": "getMessage",
            "setter": "setMessage",
            "datatype": "String",
            "datatypeWithEnum": "String",
            "name": "message",
            "defaultValue": "null",
            "defaultValueWithParam": " = data.message;",
            "baseType": "String",
            "example": "null",
            "jsonSchema": "{\n  \"type\" : \"string\"\n}",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": false,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": false,
            "isPrimitiveType": true,
            "isContainer": false,
            "isNotContainer": true,
            "isString": true,
            "isInteger": false,
            "isLong": false,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": false,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": false,
            "isReadOnly": false,
            "vendorExtensions": {},
            "hasValidation": false,
            "isInherited": false,
            "nameInCamelCase": "Message"
          }
        ],
        "requiredVars": [],
        "optionalVars": [
          {
            "baseName": "code",
            "getter": "getCode",
            "setter": "setCode",
            "datatype": "Integer",
            "datatypeWithEnum": "Integer",
            "dataFormat": "int32",
            "name": "code",
            "defaultValue": "null",
            "defaultValueWithParam": " = data.code;",
            "baseType": "Integer",
            "example": "null",
            "jsonSchema": "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": true,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": true,
            "isPrimitiveType": true,
            "isContainer": false,
            "isNotContainer": true,
            "isString": false,
            "isInteger": true,
            "isLong": false,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": false,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": false,
            "isReadOnly": false,
            "vendorExtensions": {},
            "hasValidation": false,
            "isInherited": false,
            "nameInCamelCase": "Code"
          },
          {
            "baseName": "type",
            "getter": "getType",
            "setter": "setType",
            "datatype": "String",
            "datatypeWithEnum": "String",
            "name": "type",
            "defaultValue": "null",
            "defaultValueWithParam": " = data.type;",
            "baseType": "String",
            "example": "null",
            "jsonSchema": "{\n  \"type\" : \"string\"\n}",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": true,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": true,
            "isPrimitiveType": true,
            "isContainer": false,
            "isNotContainer": true,
            "isString": true,
            "isInteger": false,
            "isLong": false,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": false,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": false,
            "isReadOnly": false,
            "vendorExtensions": {},
            "hasValidation": false,
            "isInherited": false,
            "nameInCamelCase": "Type"
          },
          {
            "baseName": "message",
            "getter": "getMessage",
            "setter": "setMessage",
            "datatype": "String",
            "datatypeWithEnum": "String",
            "name": "message",
            "defaultValue": "null",
            "defaultValueWithParam": " = data.message;",
            "baseType": "String",
            "example": "null",
            "jsonSchema": "{\n  \"type\" : \"string\"\n}",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": false,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": false,
            "isPrimitiveType": true,
            "isContainer": false,
            "isNotContainer": true,
            "isString": true,
            "isInteger": false,
            "isLong": false,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": false,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": false,
            "isReadOnly": false,
            "vendorExtensions": {},
            "hasValidation": false,
            "isInherited": false,
            "nameInCamelCase": "Message"
          }
        ],
        "readOnlyVars": [],
        "readWriteVars": [
          {
            "baseName": "code",
            "getter": "getCode",
            "setter": "setCode",
            "datatype": "Integer",
            "datatypeWithEnum": "Integer",
            "dataFormat": "int32",
            "name": "code",
            "defaultValue": "null",
            "defaultValueWithParam": " = data.code;",
            "baseType": "Integer",
            "example": "null",
            "jsonSchema": "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": true,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": true,
            "isPrimitiveType": true,
            "isContainer": false,
            "isNotContainer": true,
            "isString": false,
            "isInteger": true,
            "isLong": false,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": false,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": false,
            "isReadOnly": false,
            "vendorExtensions": {},
            "hasValidation": false,
            "isInherited": false,
            "nameInCamelCase": "Code"
          },
          {
            "baseName": "type",
            "getter": "getType",
            "setter": "setType",
            "datatype": "String",
            "datatypeWithEnum": "String",
            "name": "type",
            "defaultValue": "null",
            "defaultValueWithParam": " = data.type;",
            "baseType": "String",
            "example": "null",
            "jsonSchema": "{\n  \"type\" : \"string\"\n}",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": true,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": true,
            "isPrimitiveType": true,
            "isContainer": false,
            "isNotContainer": true,
            "isString": true,
            "isInteger": false,
            "isLong": false,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": false,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": false,
            "isReadOnly": false,
            "vendorExtensions": {},
            "hasValidation": false,
            "isInherited": false,
            "nameInCamelCase": "Type"
          },
          {
            "baseName": "message",
            "getter": "getMessage",
            "setter": "setMessage",
            "datatype": "String",
            "datatypeWithEnum": "String",
            "name": "message",
            "defaultValue": "null",
            "defaultValueWithParam": " = data.message;",
            "baseType": "String",
            "example": "null",
            "jsonSchema": "{\n  \"type\" : \"string\"\n}",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": false,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": false,
            "isPrimitiveType": true,
            "isContainer": false,
            "isNotContainer": true,
            "isString": true,
            "isInteger": false,
            "isLong": false,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": false,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": false,
            "isReadOnly": false,
            "vendorExtensions": {},
            "hasValidation": false,
            "isInherited": false,
            "nameInCamelCase": "Message"
          }
        ],
        "allVars": [
          {
            "baseName": "code",
            "getter": "getCode",
            "setter": "setCode",
            "datatype": "Integer",
            "datatypeWithEnum": "Integer",
            "dataFormat": "int32",
            "name": "code",
            "defaultValue": "null",
            "defaultValueWithParam": " = data.code;",
            "baseType": "Integer",
            "example": "null",
            "jsonSchema": "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\"\n}",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": true,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": true,
            "isPrimitiveType": true,
            "isContainer": false,
            "isNotContainer": true,
            "isString": false,
            "isInteger": true,
            "isLong": false,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": false,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": false,
            "isReadOnly": false,
            "vendorExtensions": {},
            "hasValidation": false,
            "isInherited": false,
            "nameInCamelCase": "Code"
          },
          {
            "baseName": "type",
            "getter": "getType",
            "setter": "setType",
            "datatype": "String",
            "datatypeWithEnum": "String",
            "name": "type",
            "defaultValue": "null",
            "defaultValueWithParam": " = data.type;",
            "baseType": "String",
            "example": "null",
            "jsonSchema": "{\n  \"type\" : \"string\"\n}",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": true,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": true,
            "isPrimitiveType": true,
            "isContainer": false,
            "isNotContainer": true,
            "isString": true,
            "isInteger": false,
            "isLong": false,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": false,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": false,
            "isReadOnly": false,
            "vendorExtensions": {},
            "hasValidation": false,
            "isInherited": false,
            "nameInCamelCase": "Type"
          },
          {
            "baseName": "message",
            "getter": "getMessage",
            "setter": "setMessage",
            "datatype": "String",
            "datatypeWithEnum": "String",
            "name": "message",
            "defaultValue": "null",
            "defaultValueWithParam": " = data.message;",
            "baseType": "String",
            "example": "null",
            "jsonSchema": "{\n  \"type\" : \"string\"\n}",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": false,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": false,
            "isPrimitiveType": true,
            "isContainer": false,
            "isNotContainer": true,
            "isString": true,
            "isInteger": false,
            "isLong": false,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": false,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": false,
            "isReadOnly": false,
            "vendorExtensions": {},
            "hasValidation": false,
            "isInherited": false,
            "nameInCamelCase": "Message"
          }
        ],
        "parentVars": [],
        "mandatory": [],
        "allMandatory": [],
        "imports": [
          "JsonInclude",
          "JsonProperty"
        ],
        "hasVars": true,
        "emptyVars": false,
        "hasMoreModels": true,
        "hasEnums": false,
        "isEnum": false,
        "hasRequired": false,
        "isArrayModel": false,
        "hasChildren": false,
        "hasOnlyReadOnly": false,
        "vendorExtensions": {}
      }
    },
    {
      "importPath": "io.swagger.server.api.model.Profile",
      "model": {
        "name": "Profile",
        "classname": "Profile",
        "classVarName": "profile",
        "modelJson": "{\n  \"type\" : \"object\",\n  \"properties\" : {\n    \"_id\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int64\",\n      \"example\" : 12,\n      \"readOnly\" : true\n    },\n    \"profilename\" : {\n      \"type\" : \"string\"\n    },\n    \"firstName\" : {\n      \"type\" : \"string\"\n    },\n    \"lastName\" : {\n      \"type\" : \"string\"\n    },\n    \"email\" : {\n      \"type\" : \"string\"\n    },\n    \"password\" : {\n      \"type\" : \"string\",\n      \"format\" : \"pasword\"\n    },\n    \"phone\" : {\n      \"type\" : \"string\"\n    },\n    \"profileStatus\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\",\n      \"description\" : \"Profile Status\"\n    },\n    \"createAt\" : {\n      \"type\" : \"string\",\n      \"format\" : \"date-time\",\n      \"readOnly\" : true\n    },\n    \"updateAt\" : {\n      \"type\" : \"string\",\n      \"format\" : \"date-time\",\n      \"readOnly\" : true\n    },\n    \"age\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\",\n      \"minimum\" : 0,\n      \"maximum\" : 200\n    },\n    \"gender\" : {\n      \"type\" : \"string\",\n      \"default\" : \"FEMALE\",\n      \"enum\" : [ \"MALE\", \"FEMALE\" ]\n    }\n  }\n}",
        "dataType": "Object",
        "classFilename": "Profile",
        "vars": [
          {
            "baseName": "_id",
            "getter": "getId",
            "setter": "setId",
            "datatype": "Long",
            "datatypeWithEnum": "Long",
            "dataFormat": "int64",
            "name": "id",
            "defaultValue": "null",
            "defaultValueWithParam": " = data._id;",
            "baseType": "Long",
            "example": "12",
            "jsonSchema": "{\n  \"type\" : \"integer\",\n  \"format\" : \"int64\",\n  \"example\" : 12,\n  \"readOnly\" : true\n}",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": true,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": true,
            "isPrimitiveType": true,
            "isContainer": false,
            "isNotContainer": true,
            "isString": false,
            "isInteger": false,
            "isLong": true,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": false,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": false,
            "isReadOnly": true,
            "vendorExtensions": {},
            "hasValidation": false,
            "isInherited": false,
            "nameInCamelCase": "Id"
          },
          {
            "baseName": "profilename",
            "getter": "getProfilename",
            "setter": "setProfilename",
            "datatype": "String",
            "datatypeWithEnum": "String",
            "name": "profilename",
            "defaultValue": "null",
            "defaultValueWithParam": " = data.profilename;",
            "baseType": "String",
            "example": "null",
            "jsonSchema": "{\n  \"type\" : \"string\"\n}",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": true,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": true,
            "isPrimitiveType": true,
            "isContainer": false,
            "isNotContainer": true,
            "isString": true,
            "isInteger": false,
            "isLong": false,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": false,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": false,
            "isReadOnly": false,
            "vendorExtensions": {},
            "hasValidation": false,
            "isInherited": false,
            "nameInCamelCase": "Profilename"
          },
          {
            "baseName": "firstName",
            "getter": "getFirstName",
            "setter": "setFirstName",
            "datatype": "String",
            "datatypeWithEnum": "String",
            "name": "firstName",
            "defaultValue": "null",
            "defaultValueWithParam": " = data.firstName;",
            "baseType": "String",
            "example": "null",
            "jsonSchema": "{\n  \"type\" : \"string\"\n}",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": true,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": true,
            "isPrimitiveType": true,
            "isContainer": false,
            "isNotContainer": true,
            "isString": true,
            "isInteger": false,
            "isLong": false,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": false,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": false,
            "isReadOnly": false,
            "vendorExtensions": {},
            "hasValidation": false,
            "isInherited": false,
            "nameInCamelCase": "FirstName"
          },
          {
            "baseName": "lastName",
            "getter": "getLastName",
            "setter": "setLastName",
            "datatype": "String",
            "datatypeWithEnum": "String",
            "name": "lastName",
            "defaultValue": "null",
            "defaultValueWithParam": " = data.lastName;",
            "baseType": "String",
            "example": "null",
            "jsonSchema": "{\n  \"type\" : \"string\"\n}",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": true,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": true,
            "isPrimitiveType": true,
            "isContainer": false,
            "isNotContainer": true,
            "isString": true,
            "isInteger": false,
            "isLong": false,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": false,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": false,
            "isReadOnly": false,
            "vendorExtensions": {},
            "hasValidation": false,
            "isInherited": false,
            "nameInCamelCase": "LastName"
          },
          {
            "baseName": "email",
            "getter": "getEmail",
            "setter": "setEmail",
            "datatype": "String",
            "datatypeWithEnum": "String",
            "name": "email",
            "defaultValue": "null",
            "defaultValueWithParam": " = data.email;",
            "baseType": "String",
            "example": "null",
            "jsonSchema": "{\n  \"type\" : \"string\"\n}",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": true,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": true,
            "isPrimitiveType": true,
            "isContainer": false,
            "isNotContainer": true,
            "isString": true,
            "isInteger": false,
            "isLong": false,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": false,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": false,
            "isReadOnly": false,
            "vendorExtensions": {},
            "hasValidation": false,
            "isInherited": false,
            "nameInCamelCase": "Email"
          },
          {
            "baseName": "password",
            "getter": "getPassword",
            "setter": "setPassword",
            "datatype": "String",
            "datatypeWithEnum": "String",
            "dataFormat": "pasword",
            "name": "password",
            "defaultValue": "null",
            "defaultValueWithParam": " = data.password;",
            "baseType": "String",
            "example": "null",
            "jsonSchema": "{\n  \"type\" : \"string\",\n  \"format\" : \"pasword\"\n}",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": true,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": true,
            "isPrimitiveType": true,
            "isContainer": false,
            "isNotContainer": true,
            "isString": true,
            "isInteger": false,
            "isLong": false,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": false,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": false,
            "isReadOnly": false,
            "vendorExtensions": {},
            "hasValidation": false,
            "isInherited": false,
            "nameInCamelCase": "Password"
          },
          {
            "baseName": "phone",
            "getter": "getPhone",
            "setter": "setPhone",
            "datatype": "String",
            "datatypeWithEnum": "String",
            "name": "phone",
            "defaultValue": "null",
            "defaultValueWithParam": " = data.phone;",
            "baseType": "String",
            "example": "null",
            "jsonSchema": "{\n  \"type\" : \"string\"\n}",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": true,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": true,
            "isPrimitiveType": true,
            "isContainer": false,
            "isNotContainer": true,
            "isString": true,
            "isInteger": false,
            "isLong": false,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": false,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": false,
            "isReadOnly": false,
            "vendorExtensions": {},
            "hasValidation": false,
            "isInherited": false,
            "nameInCamelCase": "Phone"
          },
          {
            "baseName": "profileStatus",
            "getter": "getProfileStatus",
            "setter": "setProfileStatus",
            "description": "Profile Status",
            "datatype": "Integer",
            "datatypeWithEnum": "Integer",
            "dataFormat": "int32",
            "name": "profileStatus",
            "defaultValue": "null",
            "defaultValueWithParam": " = data.profileStatus;",
            "baseType": "Integer",
            "unescapedDescription": "Profile Status",
            "example": "null",
            "jsonSchema": "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\",\n  \"description\" : \"Profile Status\"\n}",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": true,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": false,
            "isPrimitiveType": true,
            "isContainer": false,
            "isNotContainer": true,
            "isString": false,
            "isInteger": true,
            "isLong": false,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": false,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": false,
            "isReadOnly": false,
            "vendorExtensions": {},
            "hasValidation": false,
            "isInherited": false,
            "nameInCamelCase": "ProfileStatus"
          },
          {
            "baseName": "createAt",
            "complexType": "OffsetDateTime",
            "getter": "getCreateAt",
            "setter": "setCreateAt",
            "datatype": "OffsetDateTime",
            "datatypeWithEnum": "OffsetDateTime",
            "dataFormat": "date-time",
            "name": "createAt",
            "defaultValue": "null",
            "defaultValueWithParam": " = data.createAt;",
            "baseType": "OffsetDateTime",
            "example": "null",
            "jsonSchema": "{\n  \"type\" : \"string\",\n  \"format\" : \"date-time\",\n  \"readOnly\" : true\n}",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": true,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": false,
            "isPrimitiveType": false,
            "isContainer": false,
            "isNotContainer": true,
            "isString": false,
            "isInteger": false,
            "isLong": false,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": true,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": false,
            "isReadOnly": true,
            "vendorExtensions": {},
            "hasValidation": false,
            "isInherited": false,
            "nameInCamelCase": "CreateAt"
          },
          {
            "baseName": "updateAt",
            "complexType": "OffsetDateTime",
            "getter": "getUpdateAt",
            "setter": "setUpdateAt",
            "datatype": "OffsetDateTime",
            "datatypeWithEnum": "OffsetDateTime",
            "dataFormat": "date-time",
            "name": "updateAt",
            "defaultValue": "null",
            "defaultValueWithParam": " = data.updateAt;",
            "baseType": "OffsetDateTime",
            "example": "null",
            "jsonSchema": "{\n  \"type\" : \"string\",\n  \"format\" : \"date-time\",\n  \"readOnly\" : true\n}",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": true,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": true,
            "isPrimitiveType": false,
            "isContainer": false,
            "isNotContainer": true,
            "isString": false,
            "isInteger": false,
            "isLong": false,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": true,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": false,
            "isReadOnly": true,
            "vendorExtensions": {},
            "hasValidation": false,
            "isInherited": false,
            "nameInCamelCase": "UpdateAt"
          },
          {
            "baseName": "age",
            "getter": "getAge",
            "setter": "setAge",
            "datatype": "Integer",
            "datatypeWithEnum": "Integer",
            "dataFormat": "int32",
            "name": "age",
            "defaultValue": "null",
            "defaultValueWithParam": " = data.age;",
            "baseType": "Integer",
            "example": "null",
            "jsonSchema": "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\",\n  \"minimum\" : 0,\n  \"maximum\" : 200\n}",
            "minimum": "0",
            "maximum": "200",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": true,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": true,
            "isPrimitiveType": true,
            "isContainer": false,
            "isNotContainer": true,
            "isString": false,
            "isInteger": true,
            "isLong": false,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": false,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": false,
            "isReadOnly": false,
            "allowableValues": {
              "min": 0,
              "max": 200
            },
            "vendorExtensions": {},
            "hasValidation": true,
            "isInherited": false,
            "nameInCamelCase": "Age"
          },
          {
            "baseName": "gender",
            "getter": "getGender",
            "setter": "setGender",
            "datatype": "String",
            "datatypeWithEnum": "GenderEnum",
            "name": "gender",
            "defaultValue": "GenderEnum.FEMALE",
            "defaultValueWithParam": " = data.gender;",
            "baseType": "String",
            "example": "null",
            "jsonSchema": "{\n  \"type\" : \"string\",\n  \"default\" : \"FEMALE\",\n  \"enum\" : [ \"MALE\", \"FEMALE\" ]\n}",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": false,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": false,
            "isPrimitiveType": true,
            "isContainer": false,
            "isNotContainer": true,
            "isString": true,
            "isInteger": false,
            "isLong": false,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": false,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": true,
            "isReadOnly": false,
            "_enum": [
              "MALE",
              "FEMALE"
            ],
            "allowableValues": {
              "values": [
                "MALE",
                "FEMALE"
              ],
              "enumVars": [
                {
                  "name": "MALE",
                  "value": "\"MALE\""
                },
                {
                  "name": "FEMALE",
                  "value": "\"FEMALE\""
                }
              ]
            },
            "vendorExtensions": {},
            "hasValidation": false,
            "isInherited": false,
            "nameInCamelCase": "Gender",
            "enumName": "GenderEnum"
          }
        ],
        "requiredVars": [],
        "optionalVars": [
          {
            "baseName": "_id",
            "getter": "getId",
            "setter": "setId",
            "datatype": "Long",
            "datatypeWithEnum": "Long",
            "dataFormat": "int64",
            "name": "id",
            "defaultValue": "null",
            "defaultValueWithParam": " = data._id;",
            "baseType": "Long",
            "example": "12",
            "jsonSchema": "{\n  \"type\" : \"integer\",\n  \"format\" : \"int64\",\n  \"example\" : 12,\n  \"readOnly\" : true\n}",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": true,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": true,
            "isPrimitiveType": true,
            "isContainer": false,
            "isNotContainer": true,
            "isString": false,
            "isInteger": false,
            "isLong": true,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": false,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": false,
            "isReadOnly": true,
            "vendorExtensions": {},
            "hasValidation": false,
            "isInherited": false,
            "nameInCamelCase": "Id"
          },
          {
            "baseName": "profilename",
            "getter": "getProfilename",
            "setter": "setProfilename",
            "datatype": "String",
            "datatypeWithEnum": "String",
            "name": "profilename",
            "defaultValue": "null",
            "defaultValueWithParam": " = data.profilename;",
            "baseType": "String",
            "example": "null",
            "jsonSchema": "{\n  \"type\" : \"string\"\n}",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": true,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": true,
            "isPrimitiveType": true,
            "isContainer": false,
            "isNotContainer": true,
            "isString": true,
            "isInteger": false,
            "isLong": false,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": false,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": false,
            "isReadOnly": false,
            "vendorExtensions": {},
            "hasValidation": false,
            "isInherited": false,
            "nameInCamelCase": "Profilename"
          },
          {
            "baseName": "firstName",
            "getter": "getFirstName",
            "setter": "setFirstName",
            "datatype": "String",
            "datatypeWithEnum": "String",
            "name": "firstName",
            "defaultValue": "null",
            "defaultValueWithParam": " = data.firstName;",
            "baseType": "String",
            "example": "null",
            "jsonSchema": "{\n  \"type\" : \"string\"\n}",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": true,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": true,
            "isPrimitiveType": true,
            "isContainer": false,
            "isNotContainer": true,
            "isString": true,
            "isInteger": false,
            "isLong": false,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": false,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": false,
            "isReadOnly": false,
            "vendorExtensions": {},
            "hasValidation": false,
            "isInherited": false,
            "nameInCamelCase": "FirstName"
          },
          {
            "baseName": "lastName",
            "getter": "getLastName",
            "setter": "setLastName",
            "datatype": "String",
            "datatypeWithEnum": "String",
            "name": "lastName",
            "defaultValue": "null",
            "defaultValueWithParam": " = data.lastName;",
            "baseType": "String",
            "example": "null",
            "jsonSchema": "{\n  \"type\" : \"string\"\n}",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": true,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": true,
            "isPrimitiveType": true,
            "isContainer": false,
            "isNotContainer": true,
            "isString": true,
            "isInteger": false,
            "isLong": false,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": false,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": false,
            "isReadOnly": false,
            "vendorExtensions": {},
            "hasValidation": false,
            "isInherited": false,
            "nameInCamelCase": "LastName"
          },
          {
            "baseName": "email",
            "getter": "getEmail",
            "setter": "setEmail",
            "datatype": "String",
            "datatypeWithEnum": "String",
            "name": "email",
            "defaultValue": "null",
            "defaultValueWithParam": " = data.email;",
            "baseType": "String",
            "example": "null",
            "jsonSchema": "{\n  \"type\" : \"string\"\n}",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": true,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": true,
            "isPrimitiveType": true,
            "isContainer": false,
            "isNotContainer": true,
            "isString": true,
            "isInteger": false,
            "isLong": false,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": false,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": false,
            "isReadOnly": false,
            "vendorExtensions": {},
            "hasValidation": false,
            "isInherited": false,
            "nameInCamelCase": "Email"
          },
          {
            "baseName": "password",
            "getter": "getPassword",
            "setter": "setPassword",
            "datatype": "String",
            "datatypeWithEnum": "String",
            "dataFormat": "pasword",
            "name": "password",
            "defaultValue": "null",
            "defaultValueWithParam": " = data.password;",
            "baseType": "String",
            "example": "null",
            "jsonSchema": "{\n  \"type\" : \"string\",\n  \"format\" : \"pasword\"\n}",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": true,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": true,
            "isPrimitiveType": true,
            "isContainer": false,
            "isNotContainer": true,
            "isString": true,
            "isInteger": false,
            "isLong": false,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": false,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": false,
            "isReadOnly": false,
            "vendorExtensions": {},
            "hasValidation": false,
            "isInherited": false,
            "nameInCamelCase": "Password"
          },
          {
            "baseName": "phone",
            "getter": "getPhone",
            "setter": "setPhone",
            "datatype": "String",
            "datatypeWithEnum": "String",
            "name": "phone",
            "defaultValue": "null",
            "defaultValueWithParam": " = data.phone;",
            "baseType": "String",
            "example": "null",
            "jsonSchema": "{\n  \"type\" : \"string\"\n}",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": true,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": true,
            "isPrimitiveType": true,
            "isContainer": false,
            "isNotContainer": true,
            "isString": true,
            "isInteger": false,
            "isLong": false,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": false,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": false,
            "isReadOnly": false,
            "vendorExtensions": {},
            "hasValidation": false,
            "isInherited": false,
            "nameInCamelCase": "Phone"
          },
          {
            "baseName": "profileStatus",
            "getter": "getProfileStatus",
            "setter": "setProfileStatus",
            "description": "Profile Status",
            "datatype": "Integer",
            "datatypeWithEnum": "Integer",
            "dataFormat": "int32",
            "name": "profileStatus",
            "defaultValue": "null",
            "defaultValueWithParam": " = data.profileStatus;",
            "baseType": "Integer",
            "unescapedDescription": "Profile Status",
            "example": "null",
            "jsonSchema": "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\",\n  \"description\" : \"Profile Status\"\n}",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": true,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": false,
            "isPrimitiveType": true,
            "isContainer": false,
            "isNotContainer": true,
            "isString": false,
            "isInteger": true,
            "isLong": false,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": false,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": false,
            "isReadOnly": false,
            "vendorExtensions": {},
            "hasValidation": false,
            "isInherited": false,
            "nameInCamelCase": "ProfileStatus"
          },
          {
            "baseName": "createAt",
            "complexType": "OffsetDateTime",
            "getter": "getCreateAt",
            "setter": "setCreateAt",
            "datatype": "OffsetDateTime",
            "datatypeWithEnum": "OffsetDateTime",
            "dataFormat": "date-time",
            "name": "createAt",
            "defaultValue": "null",
            "defaultValueWithParam": " = data.createAt;",
            "baseType": "OffsetDateTime",
            "example": "null",
            "jsonSchema": "{\n  \"type\" : \"string\",\n  \"format\" : \"date-time\",\n  \"readOnly\" : true\n}",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": true,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": false,
            "isPrimitiveType": false,
            "isContainer": false,
            "isNotContainer": true,
            "isString": false,
            "isInteger": false,
            "isLong": false,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": true,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": false,
            "isReadOnly": true,
            "vendorExtensions": {},
            "hasValidation": false,
            "isInherited": false,
            "nameInCamelCase": "CreateAt"
          },
          {
            "baseName": "updateAt",
            "complexType": "OffsetDateTime",
            "getter": "getUpdateAt",
            "setter": "setUpdateAt",
            "datatype": "OffsetDateTime",
            "datatypeWithEnum": "OffsetDateTime",
            "dataFormat": "date-time",
            "name": "updateAt",
            "defaultValue": "null",
            "defaultValueWithParam": " = data.updateAt;",
            "baseType": "OffsetDateTime",
            "example": "null",
            "jsonSchema": "{\n  \"type\" : \"string\",\n  \"format\" : \"date-time\",\n  \"readOnly\" : true\n}",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": true,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": true,
            "isPrimitiveType": false,
            "isContainer": false,
            "isNotContainer": true,
            "isString": false,
            "isInteger": false,
            "isLong": false,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": true,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": false,
            "isReadOnly": true,
            "vendorExtensions": {},
            "hasValidation": false,
            "isInherited": false,
            "nameInCamelCase": "UpdateAt"
          },
          {
            "baseName": "age",
            "getter": "getAge",
            "setter": "setAge",
            "datatype": "Integer",
            "datatypeWithEnum": "Integer",
            "dataFormat": "int32",
            "name": "age",
            "defaultValue": "null",
            "defaultValueWithParam": " = data.age;",
            "baseType": "Integer",
            "example": "null",
            "jsonSchema": "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\",\n  \"minimum\" : 0,\n  \"maximum\" : 200\n}",
            "minimum": "0",
            "maximum": "200",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": true,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": true,
            "isPrimitiveType": true,
            "isContainer": false,
            "isNotContainer": true,
            "isString": false,
            "isInteger": true,
            "isLong": false,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": false,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": false,
            "isReadOnly": false,
            "allowableValues": {
              "min": 0,
              "max": 200
            },
            "vendorExtensions": {},
            "hasValidation": true,
            "isInherited": false,
            "nameInCamelCase": "Age"
          },
          {
            "baseName": "gender",
            "getter": "getGender",
            "setter": "setGender",
            "datatype": "String",
            "datatypeWithEnum": "GenderEnum",
            "name": "gender",
            "defaultValue": "GenderEnum.FEMALE",
            "defaultValueWithParam": " = data.gender;",
            "baseType": "String",
            "example": "null",
            "jsonSchema": "{\n  \"type\" : \"string\",\n  \"default\" : \"FEMALE\",\n  \"enum\" : [ \"MALE\", \"FEMALE\" ]\n}",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": false,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": false,
            "isPrimitiveType": true,
            "isContainer": false,
            "isNotContainer": true,
            "isString": true,
            "isInteger": false,
            "isLong": false,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": false,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": true,
            "isReadOnly": false,
            "_enum": [
              "MALE",
              "FEMALE"
            ],
            "allowableValues": {
              "values": [
                "MALE",
                "FEMALE"
              ],
              "enumVars": [
                {
                  "name": "MALE",
                  "value": "\"MALE\""
                },
                {
                  "name": "FEMALE",
                  "value": "\"FEMALE\""
                }
              ]
            },
            "vendorExtensions": {},
            "hasValidation": false,
            "isInherited": false,
            "nameInCamelCase": "Gender",
            "enumName": "GenderEnum"
          }
        ],
        "readOnlyVars": [
          {
            "baseName": "_id",
            "getter": "getId",
            "setter": "setId",
            "datatype": "Long",
            "datatypeWithEnum": "Long",
            "dataFormat": "int64",
            "name": "id",
            "defaultValue": "null",
            "defaultValueWithParam": " = data._id;",
            "baseType": "Long",
            "example": "12",
            "jsonSchema": "{\n  \"type\" : \"integer\",\n  \"format\" : \"int64\",\n  \"example\" : 12,\n  \"readOnly\" : true\n}",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": true,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": true,
            "isPrimitiveType": true,
            "isContainer": false,
            "isNotContainer": true,
            "isString": false,
            "isInteger": false,
            "isLong": true,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": false,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": false,
            "isReadOnly": true,
            "vendorExtensions": {},
            "hasValidation": false,
            "isInherited": false,
            "nameInCamelCase": "Id"
          },
          {
            "baseName": "createAt",
            "complexType": "OffsetDateTime",
            "getter": "getCreateAt",
            "setter": "setCreateAt",
            "datatype": "OffsetDateTime",
            "datatypeWithEnum": "OffsetDateTime",
            "dataFormat": "date-time",
            "name": "createAt",
            "defaultValue": "null",
            "defaultValueWithParam": " = data.createAt;",
            "baseType": "OffsetDateTime",
            "example": "null",
            "jsonSchema": "{\n  \"type\" : \"string\",\n  \"format\" : \"date-time\",\n  \"readOnly\" : true\n}",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": true,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": false,
            "isPrimitiveType": false,
            "isContainer": false,
            "isNotContainer": true,
            "isString": false,
            "isInteger": false,
            "isLong": false,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": true,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": false,
            "isReadOnly": true,
            "vendorExtensions": {},
            "hasValidation": false,
            "isInherited": false,
            "nameInCamelCase": "CreateAt"
          },
          {
            "baseName": "updateAt",
            "complexType": "OffsetDateTime",
            "getter": "getUpdateAt",
            "setter": "setUpdateAt",
            "datatype": "OffsetDateTime",
            "datatypeWithEnum": "OffsetDateTime",
            "dataFormat": "date-time",
            "name": "updateAt",
            "defaultValue": "null",
            "defaultValueWithParam": " = data.updateAt;",
            "baseType": "OffsetDateTime",
            "example": "null",
            "jsonSchema": "{\n  \"type\" : \"string\",\n  \"format\" : \"date-time\",\n  \"readOnly\" : true\n}",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": true,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": true,
            "isPrimitiveType": false,
            "isContainer": false,
            "isNotContainer": true,
            "isString": false,
            "isInteger": false,
            "isLong": false,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": true,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": false,
            "isReadOnly": true,
            "vendorExtensions": {},
            "hasValidation": false,
            "isInherited": false,
            "nameInCamelCase": "UpdateAt"
          }
        ],
        "readWriteVars": [
          {
            "baseName": "profilename",
            "getter": "getProfilename",
            "setter": "setProfilename",
            "datatype": "String",
            "datatypeWithEnum": "String",
            "name": "profilename",
            "defaultValue": "null",
            "defaultValueWithParam": " = data.profilename;",
            "baseType": "String",
            "example": "null",
            "jsonSchema": "{\n  \"type\" : \"string\"\n}",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": true,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": true,
            "isPrimitiveType": true,
            "isContainer": false,
            "isNotContainer": true,
            "isString": true,
            "isInteger": false,
            "isLong": false,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": false,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": false,
            "isReadOnly": false,
            "vendorExtensions": {},
            "hasValidation": false,
            "isInherited": false,
            "nameInCamelCase": "Profilename"
          },
          {
            "baseName": "firstName",
            "getter": "getFirstName",
            "setter": "setFirstName",
            "datatype": "String",
            "datatypeWithEnum": "String",
            "name": "firstName",
            "defaultValue": "null",
            "defaultValueWithParam": " = data.firstName;",
            "baseType": "String",
            "example": "null",
            "jsonSchema": "{\n  \"type\" : \"string\"\n}",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": true,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": true,
            "isPrimitiveType": true,
            "isContainer": false,
            "isNotContainer": true,
            "isString": true,
            "isInteger": false,
            "isLong": false,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": false,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": false,
            "isReadOnly": false,
            "vendorExtensions": {},
            "hasValidation": false,
            "isInherited": false,
            "nameInCamelCase": "FirstName"
          },
          {
            "baseName": "lastName",
            "getter": "getLastName",
            "setter": "setLastName",
            "datatype": "String",
            "datatypeWithEnum": "String",
            "name": "lastName",
            "defaultValue": "null",
            "defaultValueWithParam": " = data.lastName;",
            "baseType": "String",
            "example": "null",
            "jsonSchema": "{\n  \"type\" : \"string\"\n}",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": true,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": true,
            "isPrimitiveType": true,
            "isContainer": false,
            "isNotContainer": true,
            "isString": true,
            "isInteger": false,
            "isLong": false,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": false,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": false,
            "isReadOnly": false,
            "vendorExtensions": {},
            "hasValidation": false,
            "isInherited": false,
            "nameInCamelCase": "LastName"
          },
          {
            "baseName": "email",
            "getter": "getEmail",
            "setter": "setEmail",
            "datatype": "String",
            "datatypeWithEnum": "String",
            "name": "email",
            "defaultValue": "null",
            "defaultValueWithParam": " = data.email;",
            "baseType": "String",
            "example": "null",
            "jsonSchema": "{\n  \"type\" : \"string\"\n}",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": true,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": true,
            "isPrimitiveType": true,
            "isContainer": false,
            "isNotContainer": true,
            "isString": true,
            "isInteger": false,
            "isLong": false,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": false,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": false,
            "isReadOnly": false,
            "vendorExtensions": {},
            "hasValidation": false,
            "isInherited": false,
            "nameInCamelCase": "Email"
          },
          {
            "baseName": "password",
            "getter": "getPassword",
            "setter": "setPassword",
            "datatype": "String",
            "datatypeWithEnum": "String",
            "dataFormat": "pasword",
            "name": "password",
            "defaultValue": "null",
            "defaultValueWithParam": " = data.password;",
            "baseType": "String",
            "example": "null",
            "jsonSchema": "{\n  \"type\" : \"string\",\n  \"format\" : \"pasword\"\n}",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": true,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": true,
            "isPrimitiveType": true,
            "isContainer": false,
            "isNotContainer": true,
            "isString": true,
            "isInteger": false,
            "isLong": false,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": false,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": false,
            "isReadOnly": false,
            "vendorExtensions": {},
            "hasValidation": false,
            "isInherited": false,
            "nameInCamelCase": "Password"
          },
          {
            "baseName": "phone",
            "getter": "getPhone",
            "setter": "setPhone",
            "datatype": "String",
            "datatypeWithEnum": "String",
            "name": "phone",
            "defaultValue": "null",
            "defaultValueWithParam": " = data.phone;",
            "baseType": "String",
            "example": "null",
            "jsonSchema": "{\n  \"type\" : \"string\"\n}",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": true,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": true,
            "isPrimitiveType": true,
            "isContainer": false,
            "isNotContainer": true,
            "isString": true,
            "isInteger": false,
            "isLong": false,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": false,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": false,
            "isReadOnly": false,
            "vendorExtensions": {},
            "hasValidation": false,
            "isInherited": false,
            "nameInCamelCase": "Phone"
          },
          {
            "baseName": "profileStatus",
            "getter": "getProfileStatus",
            "setter": "setProfileStatus",
            "description": "Profile Status",
            "datatype": "Integer",
            "datatypeWithEnum": "Integer",
            "dataFormat": "int32",
            "name": "profileStatus",
            "defaultValue": "null",
            "defaultValueWithParam": " = data.profileStatus;",
            "baseType": "Integer",
            "unescapedDescription": "Profile Status",
            "example": "null",
            "jsonSchema": "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\",\n  \"description\" : \"Profile Status\"\n}",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": true,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": false,
            "isPrimitiveType": true,
            "isContainer": false,
            "isNotContainer": true,
            "isString": false,
            "isInteger": true,
            "isLong": false,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": false,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": false,
            "isReadOnly": false,
            "vendorExtensions": {},
            "hasValidation": false,
            "isInherited": false,
            "nameInCamelCase": "ProfileStatus"
          },
          {
            "baseName": "age",
            "getter": "getAge",
            "setter": "setAge",
            "datatype": "Integer",
            "datatypeWithEnum": "Integer",
            "dataFormat": "int32",
            "name": "age",
            "defaultValue": "null",
            "defaultValueWithParam": " = data.age;",
            "baseType": "Integer",
            "example": "null",
            "jsonSchema": "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\",\n  \"minimum\" : 0,\n  \"maximum\" : 200\n}",
            "minimum": "0",
            "maximum": "200",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": true,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": true,
            "isPrimitiveType": true,
            "isContainer": false,
            "isNotContainer": true,
            "isString": false,
            "isInteger": true,
            "isLong": false,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": false,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": false,
            "isReadOnly": false,
            "allowableValues": {
              "min": 0,
              "max": 200
            },
            "vendorExtensions": {},
            "hasValidation": true,
            "isInherited": false,
            "nameInCamelCase": "Age"
          },
          {
            "baseName": "gender",
            "getter": "getGender",
            "setter": "setGender",
            "datatype": "String",
            "datatypeWithEnum": "GenderEnum",
            "name": "gender",
            "defaultValue": "GenderEnum.FEMALE",
            "defaultValueWithParam": " = data.gender;",
            "baseType": "String",
            "example": "null",
            "jsonSchema": "{\n  \"type\" : \"string\",\n  \"default\" : \"FEMALE\",\n  \"enum\" : [ \"MALE\", \"FEMALE\" ]\n}",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": false,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": false,
            "isPrimitiveType": true,
            "isContainer": false,
            "isNotContainer": true,
            "isString": true,
            "isInteger": false,
            "isLong": false,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": false,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": true,
            "isReadOnly": false,
            "_enum": [
              "MALE",
              "FEMALE"
            ],
            "allowableValues": {
              "values": [
                "MALE",
                "FEMALE"
              ],
              "enumVars": [
                {
                  "name": "MALE",
                  "value": "\"MALE\""
                },
                {
                  "name": "FEMALE",
                  "value": "\"FEMALE\""
                }
              ]
            },
            "vendorExtensions": {},
            "hasValidation": false,
            "isInherited": false,
            "nameInCamelCase": "Gender",
            "enumName": "GenderEnum"
          }
        ],
        "allVars": [
          {
            "baseName": "_id",
            "getter": "getId",
            "setter": "setId",
            "datatype": "Long",
            "datatypeWithEnum": "Long",
            "dataFormat": "int64",
            "name": "id",
            "defaultValue": "null",
            "defaultValueWithParam": " = data._id;",
            "baseType": "Long",
            "example": "12",
            "jsonSchema": "{\n  \"type\" : \"integer\",\n  \"format\" : \"int64\",\n  \"example\" : 12,\n  \"readOnly\" : true\n}",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": true,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": true,
            "isPrimitiveType": true,
            "isContainer": false,
            "isNotContainer": true,
            "isString": false,
            "isInteger": false,
            "isLong": true,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": false,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": false,
            "isReadOnly": true,
            "vendorExtensions": {},
            "hasValidation": false,
            "isInherited": false,
            "nameInCamelCase": "Id"
          },
          {
            "baseName": "profilename",
            "getter": "getProfilename",
            "setter": "setProfilename",
            "datatype": "String",
            "datatypeWithEnum": "String",
            "name": "profilename",
            "defaultValue": "null",
            "defaultValueWithParam": " = data.profilename;",
            "baseType": "String",
            "example": "null",
            "jsonSchema": "{\n  \"type\" : \"string\"\n}",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": true,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": true,
            "isPrimitiveType": true,
            "isContainer": false,
            "isNotContainer": true,
            "isString": true,
            "isInteger": false,
            "isLong": false,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": false,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": false,
            "isReadOnly": false,
            "vendorExtensions": {},
            "hasValidation": false,
            "isInherited": false,
            "nameInCamelCase": "Profilename"
          },
          {
            "baseName": "firstName",
            "getter": "getFirstName",
            "setter": "setFirstName",
            "datatype": "String",
            "datatypeWithEnum": "String",
            "name": "firstName",
            "defaultValue": "null",
            "defaultValueWithParam": " = data.firstName;",
            "baseType": "String",
            "example": "null",
            "jsonSchema": "{\n  \"type\" : \"string\"\n}",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": true,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": true,
            "isPrimitiveType": true,
            "isContainer": false,
            "isNotContainer": true,
            "isString": true,
            "isInteger": false,
            "isLong": false,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": false,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": false,
            "isReadOnly": false,
            "vendorExtensions": {},
            "hasValidation": false,
            "isInherited": false,
            "nameInCamelCase": "FirstName"
          },
          {
            "baseName": "lastName",
            "getter": "getLastName",
            "setter": "setLastName",
            "datatype": "String",
            "datatypeWithEnum": "String",
            "name": "lastName",
            "defaultValue": "null",
            "defaultValueWithParam": " = data.lastName;",
            "baseType": "String",
            "example": "null",
            "jsonSchema": "{\n  \"type\" : \"string\"\n}",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": true,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": true,
            "isPrimitiveType": true,
            "isContainer": false,
            "isNotContainer": true,
            "isString": true,
            "isInteger": false,
            "isLong": false,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": false,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": false,
            "isReadOnly": false,
            "vendorExtensions": {},
            "hasValidation": false,
            "isInherited": false,
            "nameInCamelCase": "LastName"
          },
          {
            "baseName": "email",
            "getter": "getEmail",
            "setter": "setEmail",
            "datatype": "String",
            "datatypeWithEnum": "String",
            "name": "email",
            "defaultValue": "null",
            "defaultValueWithParam": " = data.email;",
            "baseType": "String",
            "example": "null",
            "jsonSchema": "{\n  \"type\" : \"string\"\n}",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": true,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": true,
            "isPrimitiveType": true,
            "isContainer": false,
            "isNotContainer": true,
            "isString": true,
            "isInteger": false,
            "isLong": false,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": false,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": false,
            "isReadOnly": false,
            "vendorExtensions": {},
            "hasValidation": false,
            "isInherited": false,
            "nameInCamelCase": "Email"
          },
          {
            "baseName": "password",
            "getter": "getPassword",
            "setter": "setPassword",
            "datatype": "String",
            "datatypeWithEnum": "String",
            "dataFormat": "pasword",
            "name": "password",
            "defaultValue": "null",
            "defaultValueWithParam": " = data.password;",
            "baseType": "String",
            "example": "null",
            "jsonSchema": "{\n  \"type\" : \"string\",\n  \"format\" : \"pasword\"\n}",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": true,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": true,
            "isPrimitiveType": true,
            "isContainer": false,
            "isNotContainer": true,
            "isString": true,
            "isInteger": false,
            "isLong": false,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": false,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": false,
            "isReadOnly": false,
            "vendorExtensions": {},
            "hasValidation": false,
            "isInherited": false,
            "nameInCamelCase": "Password"
          },
          {
            "baseName": "phone",
            "getter": "getPhone",
            "setter": "setPhone",
            "datatype": "String",
            "datatypeWithEnum": "String",
            "name": "phone",
            "defaultValue": "null",
            "defaultValueWithParam": " = data.phone;",
            "baseType": "String",
            "example": "null",
            "jsonSchema": "{\n  \"type\" : \"string\"\n}",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": true,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": true,
            "isPrimitiveType": true,
            "isContainer": false,
            "isNotContainer": true,
            "isString": true,
            "isInteger": false,
            "isLong": false,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": false,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": false,
            "isReadOnly": false,
            "vendorExtensions": {},
            "hasValidation": false,
            "isInherited": false,
            "nameInCamelCase": "Phone"
          },
          {
            "baseName": "profileStatus",
            "getter": "getProfileStatus",
            "setter": "setProfileStatus",
            "description": "Profile Status",
            "datatype": "Integer",
            "datatypeWithEnum": "Integer",
            "dataFormat": "int32",
            "name": "profileStatus",
            "defaultValue": "null",
            "defaultValueWithParam": " = data.profileStatus;",
            "baseType": "Integer",
            "unescapedDescription": "Profile Status",
            "example": "null",
            "jsonSchema": "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\",\n  \"description\" : \"Profile Status\"\n}",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": true,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": false,
            "isPrimitiveType": true,
            "isContainer": false,
            "isNotContainer": true,
            "isString": false,
            "isInteger": true,
            "isLong": false,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": false,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": false,
            "isReadOnly": false,
            "vendorExtensions": {},
            "hasValidation": false,
            "isInherited": false,
            "nameInCamelCase": "ProfileStatus"
          },
          {
            "baseName": "createAt",
            "complexType": "OffsetDateTime",
            "getter": "getCreateAt",
            "setter": "setCreateAt",
            "datatype": "OffsetDateTime",
            "datatypeWithEnum": "OffsetDateTime",
            "dataFormat": "date-time",
            "name": "createAt",
            "defaultValue": "null",
            "defaultValueWithParam": " = data.createAt;",
            "baseType": "OffsetDateTime",
            "example": "null",
            "jsonSchema": "{\n  \"type\" : \"string\",\n  \"format\" : \"date-time\",\n  \"readOnly\" : true\n}",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": true,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": false,
            "isPrimitiveType": false,
            "isContainer": false,
            "isNotContainer": true,
            "isString": false,
            "isInteger": false,
            "isLong": false,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": true,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": false,
            "isReadOnly": true,
            "vendorExtensions": {},
            "hasValidation": false,
            "isInherited": false,
            "nameInCamelCase": "CreateAt"
          },
          {
            "baseName": "updateAt",
            "complexType": "OffsetDateTime",
            "getter": "getUpdateAt",
            "setter": "setUpdateAt",
            "datatype": "OffsetDateTime",
            "datatypeWithEnum": "OffsetDateTime",
            "dataFormat": "date-time",
            "name": "updateAt",
            "defaultValue": "null",
            "defaultValueWithParam": " = data.updateAt;",
            "baseType": "OffsetDateTime",
            "example": "null",
            "jsonSchema": "{\n  \"type\" : \"string\",\n  \"format\" : \"date-time\",\n  \"readOnly\" : true\n}",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": true,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": true,
            "isPrimitiveType": false,
            "isContainer": false,
            "isNotContainer": true,
            "isString": false,
            "isInteger": false,
            "isLong": false,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": true,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": false,
            "isReadOnly": true,
            "vendorExtensions": {},
            "hasValidation": false,
            "isInherited": false,
            "nameInCamelCase": "UpdateAt"
          },
          {
            "baseName": "age",
            "getter": "getAge",
            "setter": "setAge",
            "datatype": "Integer",
            "datatypeWithEnum": "Integer",
            "dataFormat": "int32",
            "name": "age",
            "defaultValue": "null",
            "defaultValueWithParam": " = data.age;",
            "baseType": "Integer",
            "example": "null",
            "jsonSchema": "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\",\n  \"minimum\" : 0,\n  \"maximum\" : 200\n}",
            "minimum": "0",
            "maximum": "200",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": true,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": true,
            "isPrimitiveType": true,
            "isContainer": false,
            "isNotContainer": true,
            "isString": false,
            "isInteger": true,
            "isLong": false,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": false,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": false,
            "isReadOnly": false,
            "allowableValues": {
              "min": 0,
              "max": 200
            },
            "vendorExtensions": {},
            "hasValidation": true,
            "isInherited": false,
            "nameInCamelCase": "Age"
          },
          {
            "baseName": "gender",
            "getter": "getGender",
            "setter": "setGender",
            "datatype": "String",
            "datatypeWithEnum": "GenderEnum",
            "name": "gender",
            "defaultValue": "GenderEnum.FEMALE",
            "defaultValueWithParam": " = data.gender;",
            "baseType": "String",
            "example": "null",
            "jsonSchema": "{\n  \"type\" : \"string\",\n  \"default\" : \"FEMALE\",\n  \"enum\" : [ \"MALE\", \"FEMALE\" ]\n}",
            "exclusiveMinimum": false,
            "exclusiveMaximum": false,
            "hasMore": false,
            "required": false,
            "secondaryParam": false,
            "hasMoreNonReadOnly": false,
            "isPrimitiveType": true,
            "isContainer": false,
            "isNotContainer": true,
            "isString": true,
            "isInteger": false,
            "isLong": false,
            "isFloat": false,
            "isDouble": false,
            "isByteArray": false,
            "isBinary": false,
            "isFile": false,
            "isBoolean": false,
            "isDate": false,
            "isDateTime": false,
            "isListContainer": false,
            "isMapContainer": false,
            "isEnum": true,
            "isReadOnly": false,
            "_enum": [
              "MALE",
              "FEMALE"
            ],
            "allowableValues": {
              "values": [
                "MALE",
                "FEMALE"
              ],
              "enumVars": [
                {
                  "name": "MALE",
                  "value": "\"MALE\""
                },
                {
                  "name": "FEMALE",
                  "value": "\"FEMALE\""
                }
              ]
            },
            "vendorExtensions": {},
            "hasValidation": false,
            "isInherited": false,
            "nameInCamelCase": "Gender",
            "enumName": "GenderEnum"
          }
        ],
        "parentVars": [],
        "mandatory": [],
        "allMandatory": [],
        "imports": [
          "JsonInclude",
          "JsonProperty",
          "JsonValue",
          "OffsetDateTime"
        ],
        "hasVars": true,
        "emptyVars": false,
        "hasMoreModels": false,
        "hasEnums": true,
        "isEnum": false,
        "hasRequired": false,
        "isArrayModel": false,
        "hasChildren": false,
        "hasOnlyReadOnly": false,
        "vendorExtensions": {}
      }
    }
  ],
  "fullJavaUtil": false,
  "appDescription": "Profile API definition",
  "contextPath": "/api",
  "javaUtilPrefix": "",
  "licenseName": "Unlicense",
  "releaseNote": "Minor update",
  "version": "1.0.0",
  "apiInfo": {
    "apis": [
      {
        "appVersion": "1.0.0",
        "generatorClass": "com.github.phiz71.vertx.swagger.codegen.JavaVertXServerGenerator",
        "supportJava6": false,
        "sortParamsByRequiredFlag": true,
        "groupId": "com.optimo",
        "invokerPackage": "io.swagger.server.api",
        "classVarName": "profile",
        "developerEmail": "apiteam@swagger.io",
        "jdbcPersistence": "true",
        "hasImport": true,
        "generateModelTests": true,
        "generateApiTests": true,
        "classFilename": "ProfileApi",
        "serializableModel": false,
        "inputSpec": "swagger-profile.yml",
        "artifactUrl": "https://github.com/swagger-api/swagger-codegen",
        "developerOrganization": "Swagger",
        "baseName": "Profile",
        "package": "io.swagger.server.api.verticle",
        "imports": [
          {
            "import": "io.swagger.server.api.MainApiException"
          },
          {
            "import": "io.swagger.server.api.model.Profile"
          }
        ],
        "fullJavaUtil": false,
        "contextPath": "/api",
        "appDescription": "Profile API definition",
        "javaUtilPrefix": "",
        "licenseName": "Unlicense",
        "releaseNote": "Minor update",
        "version": "1.0.0",
        "fullSwagger": "{\n  \"swagger\" : \"2.0\",\n  \"info\" : {\n    \"description\" : \"Profile API definition\",\n    \"version\" : \"1.0.0\",\n    \"title\" : \"Profile API\"\n  },\n  \"host\" : \"www.anket.io\",\n  \"basePath\" : \"/api\",\n  \"tags\" : [ {\n    \"name\" : \"profile\",\n    \"description\" : \"Everything about a Profile\"\n  } ],\n  \"schemes\" : [ \"http\" ],\n  \"paths\" : {\n    \"/profile\" : {\n      \"post\" : {\n        \"tags\" : [ \"profile\" ],\n        \"summary\" : \"Create profile\",\n        \"description\" : \"This can only be done by the logged in profile.\",\n        \"operationId\" : \"create\",\n        \"produces\" : [ \"application/xml\", \"application/json\" ],\n        \"parameters\" : [ {\n          \"in\" : \"body\",\n          \"name\" : \"body\",\n          \"description\" : \"Created profile object\",\n          \"required\" : true,\n          \"schema\" : {\n            \"$ref\" : \"#/definitions/Profile\"\n          }\n        } ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"Success\"\n          },\n          \"default\" : {\n            \"description\" : \"successful operation\"\n          }\n        },\n        \"x-contentType\" : \"application/json\",\n        \"x-accepts\" : \"application/json\"\n      }\n    },\n    \"/profile/changePassword\" : {\n      \"put\" : {\n        \"tags\" : [ \"profile\" ],\n        \"summary\" : \"Change passwords of profile\",\n        \"operationId\" : \"changePassword\",\n        \"produces\" : [ \"application/xml\", \"application/json\" ],\n        \"parameters\" : [ {\n          \"name\" : \"profilename\",\n          \"in\" : \"formData\",\n          \"description\" : \"The profile name\",\n          \"required\" : true,\n          \"type\" : \"string\"\n        }, {\n          \"name\" : \"currentPassword\",\n          \"in\" : \"formData\",\n          \"description\" : \"Present password of the profile\",\n          \"required\" : true,\n          \"type\" : \"string\"\n        }, {\n          \"name\" : \"newPassword\",\n          \"in\" : \"formData\",\n          \"description\" : \"New password of the profile\",\n          \"required\" : true,\n          \"type\" : \"string\",\n          \"maxLength\" : 50,\n          \"minLength\" : 8\n        } ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"Success\"\n          },\n          \"400\" : {\n            \"description\" : \"Invalid profilename/password supplied\"\n          }\n        },\n        \"x-contentType\" : \"application/x-www-form-urlencoded\",\n        \"x-accepts\" : \"application/json\"\n      }\n    },\n    \"/profile/login\" : {\n      \"post\" : {\n        \"tags\" : [ \"profile\" ],\n        \"summary\" : \"Logs profile into the system\",\n        \"description\" : \"\",\n        \"operationId\" : \"loginProfile\",\n        \"produces\" : [ \"application/xml\", \"application/json\" ],\n        \"parameters\" : [ {\n          \"name\" : \"profilename\",\n          \"in\" : \"formData\",\n          \"description\" : \"The profile name for login\",\n          \"required\" : true,\n          \"type\" : \"string\"\n        }, {\n          \"name\" : \"password\",\n          \"in\" : \"formData\",\n          \"description\" : \"The password for login in clear text\",\n          \"required\" : true,\n          \"type\" : \"string\"\n        } ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"successful operation\",\n            \"schema\" : {\n              \"type\" : \"string\"\n            },\n            \"headers\" : {\n              \"X-Rate-Limit\" : {\n                \"type\" : \"integer\",\n                \"format\" : \"int32\",\n                \"description\" : \"calls per hour allowed by the profile\"\n              },\n              \"X-Expires-After\" : {\n                \"type\" : \"string\",\n                \"format\" : \"date-time\",\n                \"description\" : \"date in UTC when toekn expires\"\n              }\n            }\n          },\n          \"400\" : {\n            \"description\" : \"Invalid profilename/password supplied\"\n          }\n        },\n        \"x-contentType\" : \"application/x-www-form-urlencoded\",\n        \"x-accepts\" : \"application/json\"\n      }\n    },\n    \"/profile/logout\" : {\n      \"get\" : {\n        \"tags\" : [ \"profile\" ],\n        \"summary\" : \"Logs out current logged in profile session\",\n        \"description\" : \"\",\n        \"operationId\" : \"logoutProfile\",\n        \"produces\" : [ \"application/xml\", \"application/json\" ],\n        \"parameters\" : [ ],\n        \"responses\" : {\n          \"default\" : {\n            \"description\" : \"successful operation\"\n          }\n        },\n        \"x-contentType\" : \"application/json\",\n        \"x-accepts\" : \"application/json\"\n      }\n    },\n    \"/profile/{profilename}\" : {\n      \"get\" : {\n        \"tags\" : [ \"profile\" ],\n        \"summary\" : \"Get profile by profile name\",\n        \"description\" : \"\",\n        \"operationId\" : \"findProfileByProfilename\",\n        \"produces\" : [ \"application/xml\", \"application/json\" ],\n        \"parameters\" : [ {\n          \"name\" : \"profilename\",\n          \"in\" : \"path\",\n          \"description\" : \"The name that needs to be fetched. Use profile1 for testing. \",\n          \"required\" : true,\n          \"type\" : \"string\",\n          \"maximum\" : 255\n        } ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"successful operation\",\n            \"schema\" : {\n              \"$ref\" : \"#/definitions/Profile\"\n            }\n          },\n          \"400\" : {\n            \"description\" : \"Invalid profilename supplied\"\n          },\n          \"404\" : {\n            \"description\" : \"Profile not found\"\n          }\n        },\n        \"x-contentType\" : \"application/json\",\n        \"x-accepts\" : \"application/json\"\n      },\n      \"put\" : {\n        \"tags\" : [ \"profile\" ],\n        \"summary\" : \"Updated profile\",\n        \"description\" : \"This can only be done by the logged in profile.\",\n        \"operationId\" : \"updateProfile\",\n        \"produces\" : [ \"application/xml\", \"application/json\" ],\n        \"parameters\" : [ {\n          \"name\" : \"profilename\",\n          \"in\" : \"path\",\n          \"description\" : \"name that need to be deleted\",\n          \"required\" : true,\n          \"type\" : \"string\"\n        }, {\n          \"in\" : \"body\",\n          \"name\" : \"body\",\n          \"description\" : \"Updated profile object\",\n          \"required\" : true,\n          \"schema\" : {\n            \"$ref\" : \"#/definitions/Profile\"\n          }\n        } ],\n        \"responses\" : {\n          \"400\" : {\n            \"description\" : \"Invalid profile supplied\"\n          },\n          \"404\" : {\n            \"description\" : \"Profile not found\"\n          }\n        },\n        \"x-contentType\" : \"application/json\",\n        \"x-accepts\" : \"application/json\"\n      },\n      \"delete\" : {\n        \"tags\" : [ \"profile\" ],\n        \"summary\" : \"Delete profile\",\n        \"description\" : \"This can only be done by the logged in profile.\",\n        \"operationId\" : \"deleteProfile\",\n        \"produces\" : [ \"application/xml\", \"application/json\" ],\n        \"parameters\" : [ {\n          \"name\" : \"profilename\",\n          \"in\" : \"path\",\n          \"description\" : \"The name that needs to be deleted\",\n          \"required\" : true,\n          \"type\" : \"string\"\n        } ],\n        \"responses\" : {\n          \"400\" : {\n            \"description\" : \"Invalid profilename supplied\"\n          },\n          \"404\" : {\n            \"description\" : \"Profile not found\"\n          }\n        },\n        \"x-contentType\" : \"application/json\",\n        \"x-accepts\" : \"application/json\"\n      }\n    }\n  },\n  \"definitions\" : {\n    \"ApiResponse\" : {\n      \"type\" : \"object\",\n      \"properties\" : {\n        \"code\" : {\n          \"type\" : \"integer\",\n          \"format\" : \"int32\"\n        },\n        \"type\" : {\n          \"type\" : \"string\"\n        },\n        \"message\" : {\n          \"type\" : \"string\"\n        }\n      }\n    },\n    \"Profile\" : {\n      \"type\" : \"object\",\n      \"properties\" : {\n        \"_id\" : {\n          \"type\" : \"integer\",\n          \"format\" : \"int64\",\n          \"example\" : 12,\n          \"readOnly\" : true\n        },\n        \"profilename\" : {\n          \"type\" : \"string\"\n        },\n        \"firstName\" : {\n          \"type\" : \"string\"\n        },\n        \"lastName\" : {\n          \"type\" : \"string\"\n        },\n        \"email\" : {\n          \"type\" : \"string\"\n        },\n        \"password\" : {\n          \"type\" : \"string\",\n          \"format\" : \"pasword\"\n        },\n        \"phone\" : {\n          \"type\" : \"string\"\n        },\n        \"profileStatus\" : {\n          \"type\" : \"integer\",\n          \"format\" : \"int32\",\n          \"description\" : \"Profile Status\"\n        },\n        \"createAt\" : {\n          \"type\" : \"string\",\n          \"format\" : \"date-time\",\n          \"readOnly\" : true\n        },\n        \"updateAt\" : {\n          \"type\" : \"string\",\n          \"format\" : \"date-time\",\n          \"readOnly\" : true\n        },\n        \"age\" : {\n          \"type\" : \"integer\",\n          \"format\" : \"int32\",\n          \"minimum\" : 0,\n          \"maximum\" : 200\n        },\n        \"gender\" : {\n          \"type\" : \"string\",\n          \"default\" : \"FEMALE\",\n          \"enum\" : [ \"MALE\", \"FEMALE\" ]\n        }\n      }\n    }\n  }\n}",
        "modelDocPath": "docs/",
        "scmDeveloperConnection": "scm:git:git@github.com:swagger-api/swagger-codegen.git",
        "vertxSwaggerRouterVersion": "1.4.1-SNAPSHOT",
        "importPath": "io.swagger.server.api.verticle.Profile",
        "licenseUrl": "http://unlicense.org",
        "modelPackage": "io.swagger.server.api.model",
        "apiDocPath": "docs/",
        "serverPort": "8080",
        "basePathWithoutHost": "/api",
        "developerOrganizationUrl": "http://swagger.io",
        "operations": {
          "classname": "ProfileApi",
          "operation": [
            {
              "responseHeaders": [],
              "hasAuthMethods": false,
              "hasConsumes": false,
              "hasProduces": true,
              "hasParams": true,
              "hasOptionalParams": false,
              "returnTypeIsPrimitive": false,
              "returnSimpleType": false,
              "subresourceOperation": false,
              "isMapContainer": false,
              "isListContainer": false,
              "isMultipart": false,
              "hasMore": true,
              "isResponseBinary": false,
              "isResponseFile": false,
              "hasReference": false,
              "isRestfulIndex": false,
              "isRestfulShow": false,
              "isRestfulCreate": false,
              "isRestfulUpdate": false,
              "isRestfulDestroy": false,
              "isRestful": false,
              "path": "/profile/changePassword",
              "operationId": "changePassword",
              "httpMethod": "put",
              "summary": "Change passwords of profile",
              "baseName": "Profile",
              "produces": [
                {
                  "hasMore": "true",
                  "mediaType": "application/xml"
                },
                {
                  "hasMore": null,
                  "mediaType": "application/json"
                }
              ],
              "allParams": [
                {
                  "isFormParam": true,
                  "isQueryParam": false,
                  "isPathParam": false,
                  "isHeaderParam": false,
                  "isCookieParam": false,
                  "isBodyParam": false,
                  "hasMore": true,
                  "isContainer": false,
                  "secondaryParam": false,
                  "isCollectionFormatMulti": false,
                  "isPrimitiveType": true,
                  "baseName": "profilename",
                  "paramName": "profilename",
                  "dataType": "String",
                  "description": "The profile name",
                  "unescapedDescription": "The profile name",
                  "example": "\"profilename_example\"",
                  "jsonSchema": "{\n  \"name\" : \"profilename\",\n  \"in\" : \"formData\",\n  \"description\" : \"The profile name\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
                  "isString": true,
                  "isInteger": false,
                  "isLong": false,
                  "isFloat": false,
                  "isDouble": false,
                  "isByteArray": false,
                  "isBinary": false,
                  "isBoolean": false,
                  "isDate": false,
                  "isDateTime": false,
                  "isListContainer": false,
                  "isMapContainer": false,
                  "isFile": false,
                  "notFile": true,
                  "isEnum": false,
                  "vendorExtensions": {},
                  "hasValidation": false,
                  "required": true,
                  "exclusiveMaximum": false,
                  "exclusiveMinimum": false,
                  "uniqueItems": false
                },
                {
                  "isFormParam": true,
                  "isQueryParam": false,
                  "isPathParam": false,
                  "isHeaderParam": false,
                  "isCookieParam": false,
                  "isBodyParam": false,
                  "hasMore": true,
                  "isContainer": false,
                  "secondaryParam": true,
                  "isCollectionFormatMulti": false,
                  "isPrimitiveType": true,
                  "baseName": "currentPassword",
                  "paramName": "currentPassword",
                  "dataType": "String",
                  "description": "Present password of the profile",
                  "unescapedDescription": "Present password of the profile",
                  "example": "\"currentPassword_example\"",
                  "jsonSchema": "{\n  \"name\" : \"currentPassword\",\n  \"in\" : \"formData\",\n  \"description\" : \"Present password of the profile\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
                  "isString": true,
                  "isInteger": false,
                  "isLong": false,
                  "isFloat": false,
                  "isDouble": false,
                  "isByteArray": false,
                  "isBinary": false,
                  "isBoolean": false,
                  "isDate": false,
                  "isDateTime": false,
                  "isListContainer": false,
                  "isMapContainer": false,
                  "isFile": false,
                  "notFile": true,
                  "isEnum": false,
                  "vendorExtensions": {},
                  "hasValidation": false,
                  "required": true,
                  "exclusiveMaximum": false,
                  "exclusiveMinimum": false,
                  "uniqueItems": false
                },
                {
                  "isFormParam": true,
                  "isQueryParam": false,
                  "isPathParam": false,
                  "isHeaderParam": false,
                  "isCookieParam": false,
                  "isBodyParam": false,
                  "hasMore": false,
                  "isContainer": false,
                  "secondaryParam": true,
                  "isCollectionFormatMulti": false,
                  "isPrimitiveType": true,
                  "baseName": "newPassword",
                  "paramName": "newPassword",
                  "dataType": "String",
                  "description": "New password of the profile",
                  "unescapedDescription": "New password of the profile",
                  "example": "\"newPassword_example\"",
                  "jsonSchema": "{\n  \"name\" : \"newPassword\",\n  \"in\" : \"formData\",\n  \"description\" : \"New password of the profile\",\n  \"required\" : true,\n  \"type\" : \"string\",\n  \"maxLength\" : 50,\n  \"minLength\" : 8\n}",
                  "isString": true,
                  "isInteger": false,
                  "isLong": false,
                  "isFloat": false,
                  "isDouble": false,
                  "isByteArray": false,
                  "isBinary": false,
                  "isBoolean": false,
                  "isDate": false,
                  "isDateTime": false,
                  "isListContainer": false,
                  "isMapContainer": false,
                  "isFile": false,
                  "notFile": true,
                  "isEnum": false,
                  "vendorExtensions": {},
                  "hasValidation": true,
                  "required": true,
                  "exclusiveMaximum": false,
                  "exclusiveMinimum": false,
                  "maxLength": 50,
                  "minLength": 8,
                  "uniqueItems": false
                }
              ],
              "bodyParams": [],
              "pathParams": [],
              "queryParams": [],
              "headerParams": [],
              "formParams": [
                {
                  "isFormParam": true,
                  "isQueryParam": false,
                  "isPathParam": false,
                  "isHeaderParam": false,
                  "isCookieParam": false,
                  "isBodyParam": false,
                  "hasMore": true,
                  "isContainer": false,
                  "secondaryParam": false,
                  "isCollectionFormatMulti": false,
                  "isPrimitiveType": false,
                  "baseName": "profilename",
                  "paramName": "profilename",
                  "dataType": "String",
                  "description": "The profile name",
                  "unescapedDescription": "The profile name",
                  "example": "\"profilename_example\"",
                  "jsonSchema": "{\n  \"name\" : \"profilename\",\n  \"in\" : \"formData\",\n  \"description\" : \"The profile name\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
                  "isString": true,
                  "isInteger": false,
                  "isLong": false,
                  "isFloat": false,
                  "isDouble": false,
                  "isByteArray": false,
                  "isBinary": false,
                  "isBoolean": false,
                  "isDate": false,
                  "isDateTime": false,
                  "isListContainer": false,
                  "isMapContainer": false,
                  "isFile": false,
                  "notFile": true,
                  "isEnum": false,
                  "vendorExtensions": {},
                  "hasValidation": false,
                  "required": true,
                  "exclusiveMaximum": false,
                  "exclusiveMinimum": false,
                  "uniqueItems": false
                },
                {
                  "isFormParam": true,
                  "isQueryParam": false,
                  "isPathParam": false,
                  "isHeaderParam": false,
                  "isCookieParam": false,
                  "isBodyParam": false,
                  "hasMore": true,
                  "isContainer": false,
                  "secondaryParam": true,
                  "isCollectionFormatMulti": false,
                  "isPrimitiveType": false,
                  "baseName": "currentPassword",
                  "paramName": "currentPassword",
                  "dataType": "String",
                  "description": "Present password of the profile",
                  "unescapedDescription": "Present password of the profile",
                  "example": "\"currentPassword_example\"",
                  "jsonSchema": "{\n  \"name\" : \"currentPassword\",\n  \"in\" : \"formData\",\n  \"description\" : \"Present password of the profile\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
                  "isString": true,
                  "isInteger": false,
                  "isLong": false,
                  "isFloat": false,
                  "isDouble": false,
                  "isByteArray": false,
                  "isBinary": false,
                  "isBoolean": false,
                  "isDate": false,
                  "isDateTime": false,
                  "isListContainer": false,
                  "isMapContainer": false,
                  "isFile": false,
                  "notFile": true,
                  "isEnum": false,
                  "vendorExtensions": {},
                  "hasValidation": false,
                  "required": true,
                  "exclusiveMaximum": false,
                  "exclusiveMinimum": false,
                  "uniqueItems": false
                },
                {
                  "isFormParam": true,
                  "isQueryParam": false,
                  "isPathParam": false,
                  "isHeaderParam": false,
                  "isCookieParam": false,
                  "isBodyParam": false,
                  "hasMore": false,
                  "isContainer": false,
                  "secondaryParam": true,
                  "isCollectionFormatMulti": false,
                  "isPrimitiveType": false,
                  "baseName": "newPassword",
                  "paramName": "newPassword",
                  "dataType": "String",
                  "description": "New password of the profile",
                  "unescapedDescription": "New password of the profile",
                  "example": "\"newPassword_example\"",
                  "jsonSchema": "{\n  \"name\" : \"newPassword\",\n  \"in\" : \"formData\",\n  \"description\" : \"New password of the profile\",\n  \"required\" : true,\n  \"type\" : \"string\",\n  \"maxLength\" : 50,\n  \"minLength\" : 8\n}",
                  "isString": true,
                  "isInteger": false,
                  "isLong": false,
                  "isFloat": false,
                  "isDouble": false,
                  "isByteArray": false,
                  "isBinary": false,
                  "isBoolean": false,
                  "isDate": false,
                  "isDateTime": false,
                  "isListContainer": false,
                  "isMapContainer": false,
                  "isFile": false,
                  "notFile": true,
                  "isEnum": false,
                  "vendorExtensions": {},
                  "hasValidation": true,
                  "required": true,
                  "exclusiveMaximum": false,
                  "exclusiveMinimum": false,
                  "maxLength": 50,
                  "minLength": 8,
                  "uniqueItems": false
                }
              ],
              "tags": [
                "Profile"
              ],
              "responses": [
                {
                  "headers": [],
                  "code": "200",
                  "message": "Success",
                  "hasMore": true,
                  "hasHeaders": false,
                  "isString": false,
                  "isInteger": false,
                  "isLong": false,
                  "isFloat": false,
                  "isDouble": false,
                  "isByteArray": false,
                  "isBoolean": false,
                  "isDate": false,
                  "isDateTime": false,
                  "isDefault": true,
                  "simpleType": true,
                  "primitiveType": true,
                  "isMapContainer": false,
                  "isListContainer": false,
                  "isBinary": false,
                  "isFile": false,
                  "jsonSchema": "{\n  \"description\" : \"Success\"\n}",
                  "vendorExtensions": {}
                },
                {
                  "headers": [],
                  "code": "400",
                  "message": "Invalid profilename/password supplied",
                  "hasMore": false,
                  "hasHeaders": false,
                  "isString": false,
                  "isInteger": false,
                  "isLong": false,
                  "isFloat": false,
                  "isDouble": false,
                  "isByteArray": false,
                  "isBoolean": false,
                  "isDate": false,
                  "isDateTime": false,
                  "isDefault": false,
                  "simpleType": true,
                  "primitiveType": true,
                  "isMapContainer": false,
                  "isListContainer": false,
                  "isBinary": false,
                  "isFile": false,
                  "jsonSchema": "{\n  \"description\" : \"Invalid profilename/password supplied\"\n}",
                  "vendorExtensions": {}
                }
              ],
              "imports": [
                "MainApiException"
              ],
              "vendorExtensions": {
                "x-contentType": "application/x-www-form-urlencoded",
                "x-accepts": "application/json",
                "x-serviceId": "changePassword",
                "x-serviceIduC": "CHANGEPASSWORD",
                "x-serviceId-varName": "CHANGEPASSWORD_SERVICE_ID",
                "x-isPost": false,
                "x-isGet": false,
                "x-isPut": true,
                "x-isPatch": false,
                "x-isHead": false,
                "x-isDelete": false,
                "x-serviceId-SQL": "UPDATE TABLE_NAME SET "
              },
              "nickname": "changePassword",
              "operationIdLowerCase": "changepassword",
              "restfulShow": false,
              "restfulIndex": false,
              "restfulCreate": false,
              "restfulUpdate": false,
              "restfulDestroy": false,
              "restful": false,
              "hasBodyParam": false,
              "hasFormParams": true,
              "hasPathParams": false,
              "hasQueryParams": false,
              "hasHeaderParams": false,
              "hasExamples": false
            },
            {
              "responseHeaders": [],
              "hasAuthMethods": false,
              "hasConsumes": false,
              "hasProduces": true,
              "hasParams": true,
              "hasOptionalParams": false,
              "returnTypeIsPrimitive": false,
              "returnSimpleType": false,
              "subresourceOperation": false,
              "isMapContainer": false,
              "isListContainer": false,
              "isMultipart": false,
              "hasMore": true,
              "isResponseBinary": false,
              "isResponseFile": false,
              "hasReference": false,
              "isRestfulIndex": false,
              "isRestfulShow": false,
              "isRestfulCreate": false,
              "isRestfulUpdate": false,
              "isRestfulDestroy": false,
              "isRestful": false,
              "path": "/profile",
              "operationId": "create",
              "httpMethod": "post",
              "summary": "Create profile",
              "unescapedNotes": "This can only be done by the logged in profile.",
              "notes": "This can only be done by the logged in profile.",
              "baseName": "Profile",
              "produces": [
                {
                  "hasMore": "true",
                  "mediaType": "application/xml"
                },
                {
                  "hasMore": null,
                  "mediaType": "application/json"
                }
              ],
              "bodyParam": {
                "isFormParam": false,
                "isQueryParam": false,
                "isPathParam": false,
                "isHeaderParam": false,
                "isCookieParam": false,
                "isBodyParam": true,
                "hasMore": false,
                "isContainer": false,
                "secondaryParam": false,
                "isCollectionFormatMulti": false,
                "isPrimitiveType": false,
                "baseName": "body",
                "paramName": "body",
                "dataType": "Profile",
                "description": "Created profile object",
                "unescapedDescription": "Created profile object",
                "baseType": "Profile",
                "example": "new Profile()",
                "jsonSchema": "{\n  \"in\" : \"body\",\n  \"name\" : \"body\",\n  \"description\" : \"Created profile object\",\n  \"required\" : true,\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/Profile\"\n  }\n}",
                "isString": false,
                "isInteger": false,
                "isLong": false,
                "isFloat": false,
                "isDouble": false,
                "isByteArray": false,
                "isBinary": false,
                "isBoolean": false,
                "isDate": false,
                "isDateTime": false,
                "isListContainer": false,
                "isMapContainer": false,
                "isFile": false,
                "notFile": false,
                "isEnum": false,
                "vendorExtensions": {},
                "hasValidation": false,
                "required": true,
                "exclusiveMaximum": false,
                "exclusiveMinimum": false,
                "uniqueItems": false
              },
              "allParams": [
                {
                  "isFormParam": false,
                  "isQueryParam": false,
                  "isPathParam": false,
                  "isHeaderParam": false,
                  "isCookieParam": false,
                  "isBodyParam": true,
                  "hasMore": false,
                  "isContainer": false,
                  "secondaryParam": false,
                  "isCollectionFormatMulti": false,
                  "isPrimitiveType": false,
                  "baseName": "body",
                  "paramName": "body",
                  "dataType": "Profile",
                  "description": "Created profile object",
                  "unescapedDescription": "Created profile object",
                  "baseType": "Profile",
                  "example": "new Profile()",
                  "jsonSchema": "{\n  \"in\" : \"body\",\n  \"name\" : \"body\",\n  \"description\" : \"Created profile object\",\n  \"required\" : true,\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/Profile\"\n  }\n}",
                  "isString": false,
                  "isInteger": false,
                  "isLong": false,
                  "isFloat": false,
                  "isDouble": false,
                  "isByteArray": false,
                  "isBinary": false,
                  "isBoolean": false,
                  "isDate": false,
                  "isDateTime": false,
                  "isListContainer": false,
                  "isMapContainer": false,
                  "isFile": false,
                  "notFile": false,
                  "isEnum": false,
                  "vendorExtensions": {},
                  "hasValidation": false,
                  "required": true,
                  "exclusiveMaximum": false,
                  "exclusiveMinimum": false,
                  "uniqueItems": false
                }
              ],
              "bodyParams": [
                {
                  "isFormParam": false,
                  "isQueryParam": false,
                  "isPathParam": false,
                  "isHeaderParam": false,
                  "isCookieParam": false,
                  "isBodyParam": true,
                  "hasMore": false,
                  "isContainer": false,
                  "secondaryParam": false,
                  "isCollectionFormatMulti": false,
                  "isPrimitiveType": false,
                  "baseName": "body",
                  "paramName": "body",
                  "dataType": "Profile",
                  "description": "Created profile object",
                  "unescapedDescription": "Created profile object",
                  "baseType": "Profile",
                  "example": "new Profile()",
                  "jsonSchema": "{\n  \"in\" : \"body\",\n  \"name\" : \"body\",\n  \"description\" : \"Created profile object\",\n  \"required\" : true,\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/Profile\"\n  }\n}",
                  "isString": false,
                  "isInteger": false,
                  "isLong": false,
                  "isFloat": false,
                  "isDouble": false,
                  "isByteArray": false,
                  "isBinary": false,
                  "isBoolean": false,
                  "isDate": false,
                  "isDateTime": false,
                  "isListContainer": false,
                  "isMapContainer": false,
                  "isFile": false,
                  "notFile": false,
                  "isEnum": false,
                  "vendorExtensions": {},
                  "hasValidation": false,
                  "required": true,
                  "exclusiveMaximum": false,
                  "exclusiveMinimum": false,
                  "uniqueItems": false
                }
              ],
              "pathParams": [],
              "queryParams": [],
              "headerParams": [],
              "formParams": [],
              "tags": [
                "Profile"
              ],
              "responses": [
                {
                  "headers": [],
                  "code": "200",
                  "message": "Success",
                  "hasMore": true,
                  "hasHeaders": false,
                  "isString": false,
                  "isInteger": false,
                  "isLong": false,
                  "isFloat": false,
                  "isDouble": false,
                  "isByteArray": false,
                  "isBoolean": false,
                  "isDate": false,
                  "isDateTime": false,
                  "isDefault": true,
                  "simpleType": true,
                  "primitiveType": true,
                  "isMapContainer": false,
                  "isListContainer": false,
                  "isBinary": false,
                  "isFile": false,
                  "jsonSchema": "{\n  \"description\" : \"Success\"\n}",
                  "vendorExtensions": {}
                },
                {
                  "headers": [],
                  "code": "0",
                  "message": "successful operation",
                  "hasMore": false,
                  "hasHeaders": false,
                  "isString": false,
                  "isInteger": false,
                  "isLong": false,
                  "isFloat": false,
                  "isDouble": false,
                  "isByteArray": false,
                  "isBoolean": false,
                  "isDate": false,
                  "isDateTime": false,
                  "isDefault": false,
                  "simpleType": true,
                  "primitiveType": true,
                  "isMapContainer": false,
                  "isListContainer": false,
                  "isBinary": false,
                  "isFile": false,
                  "jsonSchema": "{\n  \"description\" : \"successful operation\"\n}",
                  "vendorExtensions": {}
                }
              ],
              "imports": [
                "MainApiException",
                "Profile"
              ],
              "vendorExtensions": {
                "x-contentType": "application/json",
                "x-accepts": "application/json",
                "x-serviceId": "create",
                "x-serviceIduC": "CREATE",
                "x-serviceId-varName": "CREATE_SERVICE_ID",
                "x-isPost": true,
                "x-isGet": false,
                "x-isPut": false,
                "x-isPatch": false,
                "x-isHead": false,
                "x-isDelete": false,
                "x-serviceId-SQL": "INSERT INTO TABLE_NAME"
              },
              "nickname": "create",
              "operationIdLowerCase": "create",
              "restfulShow": false,
              "restfulIndex": false,
              "restfulCreate": false,
              "restfulUpdate": false,
              "restfulDestroy": false,
              "restful": false,
              "hasBodyParam": true,
              "hasFormParams": false,
              "hasPathParams": false,
              "hasQueryParams": false,
              "hasHeaderParams": false,
              "hasExamples": false
            },
            {
              "responseHeaders": [],
              "hasAuthMethods": false,
              "hasConsumes": false,
              "hasProduces": true,
              "hasParams": true,
              "hasOptionalParams": false,
              "returnTypeIsPrimitive": false,
              "returnSimpleType": false,
              "subresourceOperation": false,
              "isMapContainer": false,
              "isListContainer": false,
              "isMultipart": false,
              "hasMore": true,
              "isResponseBinary": false,
              "isResponseFile": false,
              "hasReference": false,
              "isRestfulIndex": false,
              "isRestfulShow": false,
              "isRestfulCreate": false,
              "isRestfulUpdate": false,
              "isRestfulDestroy": false,
              "isRestful": false,
              "path": "/profile/:profilename",
              "operationId": "deleteProfile",
              "httpMethod": "delete",
              "summary": "Delete profile",
              "unescapedNotes": "This can only be done by the logged in profile.",
              "notes": "This can only be done by the logged in profile.",
              "baseName": "Profile",
              "produces": [
                {
                  "hasMore": "true",
                  "mediaType": "application/xml"
                },
                {
                  "hasMore": null,
                  "mediaType": "application/json"
                }
              ],
              "allParams": [
                {
                  "isFormParam": false,
                  "isQueryParam": false,
                  "isPathParam": true,
                  "isHeaderParam": false,
                  "isCookieParam": false,
                  "isBodyParam": false,
                  "hasMore": false,
                  "isContainer": false,
                  "secondaryParam": false,
                  "isCollectionFormatMulti": false,
                  "isPrimitiveType": true,
                  "baseName": "profilename",
                  "paramName": "profilename",
                  "dataType": "String",
                  "description": "The name that needs to be deleted",
                  "unescapedDescription": "The name that needs to be deleted",
                  "example": "\"profilename_example\"",
                  "jsonSchema": "{\n  \"name\" : \"profilename\",\n  \"in\" : \"path\",\n  \"description\" : \"The name that needs to be deleted\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
                  "isString": true,
                  "isInteger": false,
                  "isLong": false,
                  "isFloat": false,
                  "isDouble": false,
                  "isByteArray": false,
                  "isBinary": false,
                  "isBoolean": false,
                  "isDate": false,
                  "isDateTime": false,
                  "isListContainer": false,
                  "isMapContainer": false,
                  "isFile": false,
                  "notFile": false,
                  "isEnum": false,
                  "vendorExtensions": {},
                  "hasValidation": false,
                  "required": true,
                  "exclusiveMaximum": false,
                  "exclusiveMinimum": false,
                  "uniqueItems": false
                }
              ],
              "bodyParams": [],
              "pathParams": [
                {
                  "isFormParam": false,
                  "isQueryParam": false,
                  "isPathParam": true,
                  "isHeaderParam": false,
                  "isCookieParam": false,
                  "isBodyParam": false,
                  "hasMore": false,
                  "isContainer": false,
                  "secondaryParam": false,
                  "isCollectionFormatMulti": false,
                  "isPrimitiveType": false,
                  "baseName": "profilename",
                  "paramName": "profilename",
                  "dataType": "String",
                  "description": "The name that needs to be deleted",
                  "unescapedDescription": "The name that needs to be deleted",
                  "example": "\"profilename_example\"",
                  "jsonSchema": "{\n  \"name\" : \"profilename\",\n  \"in\" : \"path\",\n  \"description\" : \"The name that needs to be deleted\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
                  "isString": true,
                  "isInteger": false,
                  "isLong": false,
                  "isFloat": false,
                  "isDouble": false,
                  "isByteArray": false,
                  "isBinary": false,
                  "isBoolean": false,
                  "isDate": false,
                  "isDateTime": false,
                  "isListContainer": false,
                  "isMapContainer": false,
                  "isFile": false,
                  "notFile": false,
                  "isEnum": false,
                  "vendorExtensions": {},
                  "hasValidation": false,
                  "required": true,
                  "exclusiveMaximum": false,
                  "exclusiveMinimum": false,
                  "uniqueItems": false
                }
              ],
              "queryParams": [],
              "headerParams": [],
              "formParams": [],
              "tags": [
                "Profile"
              ],
              "responses": [
                {
                  "headers": [],
                  "code": "400",
                  "message": "Invalid profilename supplied",
                  "hasMore": true,
                  "hasHeaders": false,
                  "isString": false,
                  "isInteger": false,
                  "isLong": false,
                  "isFloat": false,
                  "isDouble": false,
                  "isByteArray": false,
                  "isBoolean": false,
                  "isDate": false,
                  "isDateTime": false,
                  "isDefault": false,
                  "simpleType": true,
                  "primitiveType": true,
                  "isMapContainer": false,
                  "isListContainer": false,
                  "isBinary": false,
                  "isFile": false,
                  "jsonSchema": "{\n  \"description\" : \"Invalid profilename supplied\"\n}",
                  "vendorExtensions": {}
                },
                {
                  "headers": [],
                  "code": "404",
                  "message": "Profile not found",
                  "hasMore": false,
                  "hasHeaders": false,
                  "isString": false,
                  "isInteger": false,
                  "isLong": false,
                  "isFloat": false,
                  "isDouble": false,
                  "isByteArray": false,
                  "isBoolean": false,
                  "isDate": false,
                  "isDateTime": false,
                  "isDefault": false,
                  "simpleType": true,
                  "primitiveType": true,
                  "isMapContainer": false,
                  "isListContainer": false,
                  "isBinary": false,
                  "isFile": false,
                  "jsonSchema": "{\n  \"description\" : \"Profile not found\"\n}",
                  "vendorExtensions": {}
                }
              ],
              "imports": [
                "MainApiException"
              ],
              "vendorExtensions": {
                "x-contentType": "application/json",
                "x-accepts": "application/json",
                "x-serviceId": "deleteProfile",
                "x-serviceIduC": "DELETEPROFILE",
                "x-serviceId-varName": "DELETEPROFILE_SERVICE_ID",
                "x-isPost": false,
                "x-isGet": false,
                "x-isPut": false,
                "x-isPatch": false,
                "x-isHead": false,
                "x-isDelete": true,
                "x-serviceId-SQL": "DELETE FROM TABLE_NAME WHERE profilename = ?"
              },
              "nickname": "deleteProfile",
              "operationIdLowerCase": "deleteprofile",
              "restfulShow": false,
              "restfulIndex": false,
              "restfulCreate": false,
              "restfulUpdate": false,
              "restfulDestroy": false,
              "restful": false,
              "hasBodyParam": false,
              "hasFormParams": false,
              "hasPathParams": true,
              "hasQueryParams": false,
              "hasHeaderParams": false,
              "hasExamples": false
            },
            {
              "responseHeaders": [],
              "hasAuthMethods": false,
              "hasConsumes": false,
              "hasProduces": true,
              "hasParams": true,
              "hasOptionalParams": false,
              "returnTypeIsPrimitive": false,
              "returnSimpleType": true,
              "subresourceOperation": false,
              "isMapContainer": false,
              "isListContainer": false,
              "isMultipart": false,
              "hasMore": true,
              "isResponseBinary": false,
              "isResponseFile": false,
              "hasReference": true,
              "isRestfulIndex": false,
              "isRestfulShow": false,
              "isRestfulCreate": false,
              "isRestfulUpdate": false,
              "isRestfulDestroy": false,
              "isRestful": false,
              "path": "/profile/:profilename",
              "operationId": "findProfileByProfilename",
              "returnType": "Profile",
              "httpMethod": "get",
              "returnBaseType": "Profile",
              "summary": "Get profile by profile name",
              "unescapedNotes": "",
              "notes": "",
              "baseName": "Profile",
              "defaultResponse": "null",
              "produces": [
                {
                  "hasMore": "true",
                  "mediaType": "application/xml"
                },
                {
                  "hasMore": null,
                  "mediaType": "application/json"
                }
              ],
              "allParams": [
                {
                  "isFormParam": false,
                  "isQueryParam": false,
                  "isPathParam": true,
                  "isHeaderParam": false,
                  "isCookieParam": false,
                  "isBodyParam": false,
                  "hasMore": false,
                  "isContainer": false,
                  "secondaryParam": false,
                  "isCollectionFormatMulti": false,
                  "isPrimitiveType": true,
                  "baseName": "profilename",
                  "paramName": "profilename",
                  "dataType": "String",
                  "description": "The name that needs to be fetched. Use profile1 for testing. ",
                  "unescapedDescription": "The name that needs to be fetched. Use profile1 for testing. ",
                  "example": "\"profilename_example\"",
                  "jsonSchema": "{\n  \"name\" : \"profilename\",\n  \"in\" : \"path\",\n  \"description\" : \"The name that needs to be fetched. Use profile1 for testing. \",\n  \"required\" : true,\n  \"type\" : \"string\",\n  \"maximum\" : 255\n}",
                  "isString": true,
                  "isInteger": false,
                  "isLong": false,
                  "isFloat": false,
                  "isDouble": false,
                  "isByteArray": false,
                  "isBinary": false,
                  "isBoolean": false,
                  "isDate": false,
                  "isDateTime": false,
                  "isListContainer": false,
                  "isMapContainer": false,
                  "isFile": false,
                  "notFile": false,
                  "isEnum": false,
                  "vendorExtensions": {},
                  "hasValidation": true,
                  "required": true,
                  "maximum": "255",
                  "exclusiveMaximum": false,
                  "exclusiveMinimum": false,
                  "uniqueItems": false
                }
              ],
              "bodyParams": [],
              "pathParams": [
                {
                  "isFormParam": false,
                  "isQueryParam": false,
                  "isPathParam": true,
                  "isHeaderParam": false,
                  "isCookieParam": false,
                  "isBodyParam": false,
                  "hasMore": false,
                  "isContainer": false,
                  "secondaryParam": false,
                  "isCollectionFormatMulti": false,
                  "isPrimitiveType": false,
                  "baseName": "profilename",
                  "paramName": "profilename",
                  "dataType": "String",
                  "description": "The name that needs to be fetched. Use profile1 for testing. ",
                  "unescapedDescription": "The name that needs to be fetched. Use profile1 for testing. ",
                  "example": "\"profilename_example\"",
                  "jsonSchema": "{\n  \"name\" : \"profilename\",\n  \"in\" : \"path\",\n  \"description\" : \"The name that needs to be fetched. Use profile1 for testing. \",\n  \"required\" : true,\n  \"type\" : \"string\",\n  \"maximum\" : 255\n}",
                  "isString": true,
                  "isInteger": false,
                  "isLong": false,
                  "isFloat": false,
                  "isDouble": false,
                  "isByteArray": false,
                  "isBinary": false,
                  "isBoolean": false,
                  "isDate": false,
                  "isDateTime": false,
                  "isListContainer": false,
                  "isMapContainer": false,
                  "isFile": false,
                  "notFile": false,
                  "isEnum": false,
                  "vendorExtensions": {},
                  "hasValidation": true,
                  "required": true,
                  "maximum": "255",
                  "exclusiveMaximum": false,
                  "exclusiveMinimum": false,
                  "uniqueItems": false
                }
              ],
              "queryParams": [],
              "headerParams": [],
              "formParams": [],
              "tags": [
                "Profile"
              ],
              "responses": [
                {
                  "headers": [],
                  "code": "200",
                  "message": "successful operation",
                  "hasMore": true,
                  "dataType": "Profile",
                  "baseType": "Profile",
                  "hasHeaders": false,
                  "isString": false,
                  "isInteger": false,
                  "isLong": false,
                  "isFloat": false,
                  "isDouble": false,
                  "isByteArray": false,
                  "isBoolean": false,
                  "isDate": false,
                  "isDateTime": false,
                  "isDefault": true,
                  "simpleType": true,
                  "primitiveType": false,
                  "isMapContainer": false,
                  "isListContainer": false,
                  "isBinary": false,
                  "isFile": false,
                  "schema": {
                    "$ref": "#/definitions/Profile"
                  },
                  "jsonSchema": "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/Profile\"\n  }\n}",
                  "vendorExtensions": {}
                },
                {
                  "headers": [],
                  "code": "400",
                  "message": "Invalid profilename supplied",
                  "hasMore": true,
                  "hasHeaders": false,
                  "isString": false,
                  "isInteger": false,
                  "isLong": false,
                  "isFloat": false,
                  "isDouble": false,
                  "isByteArray": false,
                  "isBoolean": false,
                  "isDate": false,
                  "isDateTime": false,
                  "isDefault": false,
                  "simpleType": true,
                  "primitiveType": true,
                  "isMapContainer": false,
                  "isListContainer": false,
                  "isBinary": false,
                  "isFile": false,
                  "jsonSchema": "{\n  \"description\" : \"Invalid profilename supplied\"\n}",
                  "vendorExtensions": {}
                },
                {
                  "headers": [],
                  "code": "404",
                  "message": "Profile not found",
                  "hasMore": false,
                  "hasHeaders": false,
                  "isString": false,
                  "isInteger": false,
                  "isLong": false,
                  "isFloat": false,
                  "isDouble": false,
                  "isByteArray": false,
                  "isBoolean": false,
                  "isDate": false,
                  "isDateTime": false,
                  "isDefault": false,
                  "simpleType": true,
                  "primitiveType": true,
                  "isMapContainer": false,
                  "isListContainer": false,
                  "isBinary": false,
                  "isFile": false,
                  "jsonSchema": "{\n  \"description\" : \"Profile not found\"\n}",
                  "vendorExtensions": {}
                }
              ],
              "imports": [
                "MainApiException",
                "Profile"
              ],
              "examples": [
                {
                  "contentType": "application/xml",
                  "example": "<null>\n  <_id>12</_id>\n  <profilename>aeiou</profilename>\n  <firstName>aeiou</firstName>\n  <lastName>aeiou</lastName>\n  <email>aeiou</email>\n  <password>aeiou</password>\n  <phone>aeiou</phone>\n  <profileStatus>123</profileStatus>\n  <createAt>2000-01-23T04:56:07.000Z</createAt>\n  <updateAt>2000-01-23T04:56:07.000Z</updateAt>\n  <age>123</age>\n  <gender>aeiou</gender>\n</null>"
                },
                {
                  "contentType": "application/json",
                  "example": "{\n  \"firstName\" : \"aeiou\",\n  \"lastName\" : \"aeiou\",\n  \"password\" : \"aeiou\",\n  \"gender\" : \"aeiou\",\n  \"phone\" : \"aeiou\",\n  \"profilename\" : \"aeiou\",\n  \"profileStatus\" : 123,\n  \"updateAt\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"_id\" : 12,\n  \"email\" : \"aeiou\",\n  \"createAt\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"age\" : 123\n}"
                }
              ],
              "vendorExtensions": {
                "x-contentType": "application/json",
                "x-accepts": "application/json",
                "x-serviceId": "findProfileByProfilename",
                "x-serviceIduC": "FINDPROFILEBYPROFILENAME",
                "x-serviceId-varName": "FINDPROFILEBYPROFILENAME_SERVICE_ID",
                "x-isPost": false,
                "x-isGet": true,
                "x-isPut": false,
                "x-isPatch": false,
                "x-isHead": false,
                "x-isDelete": false,
                "x-serviceId-SQL": "SELECT * FROM TABLE_NAME WHERE profilename = ?"
              },
              "nickname": "findProfileByProfilename",
              "operationIdLowerCase": "findprofilebyprofilename",
              "restfulShow": false,
              "restfulIndex": false,
              "restfulCreate": false,
              "restfulUpdate": false,
              "restfulDestroy": false,
              "restful": false,
              "hasBodyParam": false,
              "hasFormParams": false,
              "hasPathParams": true,
              "hasQueryParams": false,
              "hasHeaderParams": false,
              "hasExamples": true
            },
            {
              "responseHeaders": [
                {
                  "baseName": "X-Rate-Limit",
                  "getter": "getXRateLimit",
                  "setter": "setXRateLimit",
                  "description": "calls per hour allowed by the profile",
                  "datatype": "Integer",
                  "datatypeWithEnum": "Integer",
                  "dataFormat": "int32",
                  "name": "xRateLimit",
                  "defaultValue": "null",
                  "defaultValueWithParam": " = data.X-Rate-Limit;",
                  "baseType": "Integer",
                  "unescapedDescription": "calls per hour allowed by the profile",
                  "example": "null",
                  "jsonSchema": "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\",\n  \"description\" : \"calls per hour allowed by the profile\"\n}",
                  "exclusiveMinimum": false,
                  "exclusiveMaximum": false,
                  "hasMore": false,
                  "required": false,
                  "secondaryParam": false,
                  "hasMoreNonReadOnly": false,
                  "isPrimitiveType": true,
                  "isContainer": false,
                  "isNotContainer": true,
                  "isString": false,
                  "isInteger": true,
                  "isLong": false,
                  "isFloat": false,
                  "isDouble": false,
                  "isByteArray": false,
                  "isBinary": false,
                  "isFile": false,
                  "isBoolean": false,
                  "isDate": false,
                  "isDateTime": false,
                  "isListContainer": false,
                  "isMapContainer": false,
                  "isEnum": false,
                  "isReadOnly": false,
                  "vendorExtensions": {},
                  "hasValidation": false,
                  "isInherited": false,
                  "nameInCamelCase": "XRateLimit"
                },
                {
                  "baseName": "X-Expires-After",
                  "complexType": "OffsetDateTime",
                  "getter": "getXExpiresAfter",
                  "setter": "setXExpiresAfter",
                  "description": "date in UTC when toekn expires",
                  "datatype": "OffsetDateTime",
                  "datatypeWithEnum": "OffsetDateTime",
                  "dataFormat": "date-time",
                  "name": "xExpiresAfter",
                  "defaultValue": "null",
                  "defaultValueWithParam": " = data.X-Expires-After;",
                  "baseType": "OffsetDateTime",
                  "unescapedDescription": "date in UTC when toekn expires",
                  "example": "null",
                  "jsonSchema": "{\n  \"type\" : \"string\",\n  \"format\" : \"date-time\",\n  \"description\" : \"date in UTC when toekn expires\"\n}",
                  "exclusiveMinimum": false,
                  "exclusiveMaximum": false,
                  "hasMore": false,
                  "required": false,
                  "secondaryParam": false,
                  "hasMoreNonReadOnly": false,
                  "isPrimitiveType": false,
                  "isContainer": false,
                  "isNotContainer": true,
                  "isString": false,
                  "isInteger": false,
                  "isLong": false,
                  "isFloat": false,
                  "isDouble": false,
                  "isByteArray": false,
                  "isBinary": false,
                  "isFile": false,
                  "isBoolean": false,
                  "isDate": false,
                  "isDateTime": true,
                  "isListContainer": false,
                  "isMapContainer": false,
                  "isEnum": false,
                  "isReadOnly": false,
                  "vendorExtensions": {},
                  "hasValidation": false,
                  "isInherited": false,
                  "nameInCamelCase": "XExpiresAfter"
                }
              ],
              "hasAuthMethods": false,
              "hasConsumes": false,
              "hasProduces": true,
              "hasParams": true,
              "hasOptionalParams": false,
              "returnTypeIsPrimitive": true,
              "returnSimpleType": true,
              "subresourceOperation": false,
              "isMapContainer": false,
              "isListContainer": false,
              "isMultipart": false,
              "hasMore": true,
              "isResponseBinary": false,
              "isResponseFile": false,
              "hasReference": false,
              "isRestfulIndex": false,
              "isRestfulShow": false,
              "isRestfulCreate": false,
              "isRestfulUpdate": false,
              "isRestfulDestroy": false,
              "isRestful": false,
              "path": "/profile/login",
              "operationId": "loginProfile",
              "returnType": "String",
              "httpMethod": "post",
              "returnBaseType": "String",
              "summary": "Logs profile into the system",
              "unescapedNotes": "",
              "notes": "",
              "baseName": "Profile",
              "defaultResponse": "null",
              "produces": [
                {
                  "hasMore": "true",
                  "mediaType": "application/xml"
                },
                {
                  "hasMore": null,
                  "mediaType": "application/json"
                }
              ],
              "allParams": [
                {
                  "isFormParam": true,
                  "isQueryParam": false,
                  "isPathParam": false,
                  "isHeaderParam": false,
                  "isCookieParam": false,
                  "isBodyParam": false,
                  "hasMore": true,
                  "isContainer": false,
                  "secondaryParam": false,
                  "isCollectionFormatMulti": false,
                  "isPrimitiveType": true,
                  "baseName": "profilename",
                  "paramName": "profilename",
                  "dataType": "String",
                  "description": "The profile name for login",
                  "unescapedDescription": "The profile name for login",
                  "example": "\"profilename_example\"",
                  "jsonSchema": "{\n  \"name\" : \"profilename\",\n  \"in\" : \"formData\",\n  \"description\" : \"The profile name for login\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
                  "isString": true,
                  "isInteger": false,
                  "isLong": false,
                  "isFloat": false,
                  "isDouble": false,
                  "isByteArray": false,
                  "isBinary": false,
                  "isBoolean": false,
                  "isDate": false,
                  "isDateTime": false,
                  "isListContainer": false,
                  "isMapContainer": false,
                  "isFile": false,
                  "notFile": true,
                  "isEnum": false,
                  "vendorExtensions": {},
                  "hasValidation": false,
                  "required": true,
                  "exclusiveMaximum": false,
                  "exclusiveMinimum": false,
                  "uniqueItems": false
                },
                {
                  "isFormParam": true,
                  "isQueryParam": false,
                  "isPathParam": false,
                  "isHeaderParam": false,
                  "isCookieParam": false,
                  "isBodyParam": false,
                  "hasMore": false,
                  "isContainer": false,
                  "secondaryParam": true,
                  "isCollectionFormatMulti": false,
                  "isPrimitiveType": true,
                  "baseName": "password",
                  "paramName": "password",
                  "dataType": "String",
                  "description": "The password for login in clear text",
                  "unescapedDescription": "The password for login in clear text",
                  "example": "\"password_example\"",
                  "jsonSchema": "{\n  \"name\" : \"password\",\n  \"in\" : \"formData\",\n  \"description\" : \"The password for login in clear text\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
                  "isString": true,
                  "isInteger": false,
                  "isLong": false,
                  "isFloat": false,
                  "isDouble": false,
                  "isByteArray": false,
                  "isBinary": false,
                  "isBoolean": false,
                  "isDate": false,
                  "isDateTime": false,
                  "isListContainer": false,
                  "isMapContainer": false,
                  "isFile": false,
                  "notFile": true,
                  "isEnum": false,
                  "vendorExtensions": {},
                  "hasValidation": false,
                  "required": true,
                  "exclusiveMaximum": false,
                  "exclusiveMinimum": false,
                  "uniqueItems": false
                }
              ],
              "bodyParams": [],
              "pathParams": [],
              "queryParams": [],
              "headerParams": [],
              "formParams": [
                {
                  "isFormParam": true,
                  "isQueryParam": false,
                  "isPathParam": false,
                  "isHeaderParam": false,
                  "isCookieParam": false,
                  "isBodyParam": false,
                  "hasMore": true,
                  "isContainer": false,
                  "secondaryParam": false,
                  "isCollectionFormatMulti": false,
                  "isPrimitiveType": false,
                  "baseName": "profilename",
                  "paramName": "profilename",
                  "dataType": "String",
                  "description": "The profile name for login",
                  "unescapedDescription": "The profile name for login",
                  "example": "\"profilename_example\"",
                  "jsonSchema": "{\n  \"name\" : \"profilename\",\n  \"in\" : \"formData\",\n  \"description\" : \"The profile name for login\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
                  "isString": true,
                  "isInteger": false,
                  "isLong": false,
                  "isFloat": false,
                  "isDouble": false,
                  "isByteArray": false,
                  "isBinary": false,
                  "isBoolean": false,
                  "isDate": false,
                  "isDateTime": false,
                  "isListContainer": false,
                  "isMapContainer": false,
                  "isFile": false,
                  "notFile": true,
                  "isEnum": false,
                  "vendorExtensions": {},
                  "hasValidation": false,
                  "required": true,
                  "exclusiveMaximum": false,
                  "exclusiveMinimum": false,
                  "uniqueItems": false
                },
                {
                  "isFormParam": true,
                  "isQueryParam": false,
                  "isPathParam": false,
                  "isHeaderParam": false,
                  "isCookieParam": false,
                  "isBodyParam": false,
                  "hasMore": false,
                  "isContainer": false,
                  "secondaryParam": true,
                  "isCollectionFormatMulti": false,
                  "isPrimitiveType": false,
                  "baseName": "password",
                  "paramName": "password",
                  "dataType": "String",
                  "description": "The password for login in clear text",
                  "unescapedDescription": "The password for login in clear text",
                  "example": "\"password_example\"",
                  "jsonSchema": "{\n  \"name\" : \"password\",\n  \"in\" : \"formData\",\n  \"description\" : \"The password for login in clear text\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
                  "isString": true,
                  "isInteger": false,
                  "isLong": false,
                  "isFloat": false,
                  "isDouble": false,
                  "isByteArray": false,
                  "isBinary": false,
                  "isBoolean": false,
                  "isDate": false,
                  "isDateTime": false,
                  "isListContainer": false,
                  "isMapContainer": false,
                  "isFile": false,
                  "notFile": true,
                  "isEnum": false,
                  "vendorExtensions": {},
                  "hasValidation": false,
                  "required": true,
                  "exclusiveMaximum": false,
                  "exclusiveMinimum": false,
                  "uniqueItems": false
                }
              ],
              "tags": [
                "Profile"
              ],
              "responses": [
                {
                  "headers": [
                    {
                      "baseName": "X-Rate-Limit",
                      "getter": "getXRateLimit",
                      "setter": "setXRateLimit",
                      "description": "calls per hour allowed by the profile",
                      "datatype": "Integer",
                      "datatypeWithEnum": "Integer",
                      "dataFormat": "int32",
                      "name": "xRateLimit",
                      "defaultValue": "null",
                      "defaultValueWithParam": " = data.X-Rate-Limit;",
                      "baseType": "Integer",
                      "unescapedDescription": "calls per hour allowed by the profile",
                      "example": "null",
                      "jsonSchema": "{\n  \"type\" : \"integer\",\n  \"format\" : \"int32\",\n  \"description\" : \"calls per hour allowed by the profile\"\n}",
                      "exclusiveMinimum": false,
                      "exclusiveMaximum": false,
                      "hasMore": false,
                      "required": false,
                      "secondaryParam": false,
                      "hasMoreNonReadOnly": false,
                      "isPrimitiveType": true,
                      "isContainer": false,
                      "isNotContainer": true,
                      "isString": false,
                      "isInteger": true,
                      "isLong": false,
                      "isFloat": false,
                      "isDouble": false,
                      "isByteArray": false,
                      "isBinary": false,
                      "isFile": false,
                      "isBoolean": false,
                      "isDate": false,
                      "isDateTime": false,
                      "isListContainer": false,
                      "isMapContainer": false,
                      "isEnum": false,
                      "isReadOnly": false,
                      "vendorExtensions": {},
                      "hasValidation": false,
                      "isInherited": false,
                      "nameInCamelCase": "XRateLimit"
                    },
                    {
                      "baseName": "X-Expires-After",
                      "complexType": "OffsetDateTime",
                      "getter": "getXExpiresAfter",
                      "setter": "setXExpiresAfter",
                      "description": "date in UTC when toekn expires",
                      "datatype": "OffsetDateTime",
                      "datatypeWithEnum": "OffsetDateTime",
                      "dataFormat": "date-time",
                      "name": "xExpiresAfter",
                      "defaultValue": "null",
                      "defaultValueWithParam": " = data.X-Expires-After;",
                      "baseType": "OffsetDateTime",
                      "unescapedDescription": "date in UTC when toekn expires",
                      "example": "null",
                      "jsonSchema": "{\n  \"type\" : \"string\",\n  \"format\" : \"date-time\",\n  \"description\" : \"date in UTC when toekn expires\"\n}",
                      "exclusiveMinimum": false,
                      "exclusiveMaximum": false,
                      "hasMore": false,
                      "required": false,
                      "secondaryParam": false,
                      "hasMoreNonReadOnly": false,
                      "isPrimitiveType": false,
                      "isContainer": false,
                      "isNotContainer": true,
                      "isString": false,
                      "isInteger": false,
                      "isLong": false,
                      "isFloat": false,
                      "isDouble": false,
                      "isByteArray": false,
                      "isBinary": false,
                      "isFile": false,
                      "isBoolean": false,
                      "isDate": false,
                      "isDateTime": true,
                      "isListContainer": false,
                      "isMapContainer": false,
                      "isEnum": false,
                      "isReadOnly": false,
                      "vendorExtensions": {},
                      "hasValidation": false,
                      "isInherited": false,
                      "nameInCamelCase": "XExpiresAfter"
                    }
                  ],
                  "code": "200",
                  "message": "successful operation",
                  "hasMore": true,
                  "dataType": "String",
                  "baseType": "String",
                  "hasHeaders": true,
                  "isString": true,
                  "isInteger": false,
                  "isLong": false,
                  "isFloat": false,
                  "isDouble": false,
                  "isByteArray": false,
                  "isBoolean": false,
                  "isDate": false,
                  "isDateTime": false,
                  "isDefault": true,
                  "simpleType": true,
                  "primitiveType": true,
                  "isMapContainer": false,
                  "isListContainer": false,
                  "isBinary": false,
                  "isFile": false,
                  "schema": {
                    "type": "string"
                  },
                  "jsonSchema": "{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"type\" : \"string\"\n  },\n  \"headers\" : {\n    \"X-Rate-Limit\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\",\n      \"description\" : \"calls per hour allowed by the profile\"\n    },\n    \"X-Expires-After\" : {\n      \"type\" : \"string\",\n      \"format\" : \"date-time\",\n      \"description\" : \"date in UTC when toekn expires\"\n    }\n  }\n}",
                  "vendorExtensions": {}
                },
                {
                  "headers": [],
                  "code": "400",
                  "message": "Invalid profilename/password supplied",
                  "hasMore": false,
                  "hasHeaders": false,
                  "isString": false,
                  "isInteger": false,
                  "isLong": false,
                  "isFloat": false,
                  "isDouble": false,
                  "isByteArray": false,
                  "isBoolean": false,
                  "isDate": false,
                  "isDateTime": false,
                  "isDefault": false,
                  "simpleType": true,
                  "primitiveType": true,
                  "isMapContainer": false,
                  "isListContainer": false,
                  "isBinary": false,
                  "isFile": false,
                  "jsonSchema": "{\n  \"description\" : \"Invalid profilename/password supplied\"\n}",
                  "vendorExtensions": {}
                }
              ],
              "imports": [
                "MainApiException"
              ],
              "examples": [
                {
                  "contentType": "application/xml",
                  "example": "aeiou"
                },
                {
                  "contentType": "application/json",
                  "example": "\"aeiou\""
                }
              ],
              "vendorExtensions": {
                "x-contentType": "application/x-www-form-urlencoded",
                "x-accepts": "application/json",
                "x-serviceId": "loginProfile",
                "x-serviceIduC": "LOGINPROFILE",
                "x-serviceId-varName": "LOGINPROFILE_SERVICE_ID",
                "x-isPost": true,
                "x-isGet": false,
                "x-isPut": false,
                "x-isPatch": false,
                "x-isHead": false,
                "x-isDelete": false,
                "x-serviceId-SQL": "INSERT INTO TABLE_NAME"
              },
              "nickname": "loginProfile",
              "operationIdLowerCase": "loginprofile",
              "restfulShow": false,
              "restfulIndex": false,
              "restfulCreate": false,
              "restfulUpdate": false,
              "restfulDestroy": false,
              "restful": false,
              "hasBodyParam": false,
              "hasFormParams": true,
              "hasPathParams": false,
              "hasQueryParams": false,
              "hasHeaderParams": false,
              "hasExamples": true
            },
            {
              "responseHeaders": [],
              "hasAuthMethods": false,
              "hasConsumes": false,
              "hasProduces": true,
              "hasParams": false,
              "hasOptionalParams": false,
              "returnTypeIsPrimitive": false,
              "returnSimpleType": false,
              "subresourceOperation": false,
              "isMapContainer": false,
              "isListContainer": false,
              "isMultipart": false,
              "hasMore": true,
              "isResponseBinary": false,
              "isResponseFile": false,
              "hasReference": false,
              "isRestfulIndex": false,
              "isRestfulShow": false,
              "isRestfulCreate": false,
              "isRestfulUpdate": false,
              "isRestfulDestroy": false,
              "isRestful": false,
              "path": "/profile/logout",
              "operationId": "logoutProfile",
              "httpMethod": "get",
              "summary": "Logs out current logged in profile session",
              "unescapedNotes": "",
              "notes": "",
              "baseName": "Profile",
              "produces": [
                {
                  "hasMore": "true",
                  "mediaType": "application/xml"
                },
                {
                  "hasMore": null,
                  "mediaType": "application/json"
                }
              ],
              "allParams": [],
              "bodyParams": [],
              "pathParams": [],
              "queryParams": [],
              "headerParams": [],
              "formParams": [],
              "tags": [
                "Profile"
              ],
              "responses": [
                {
                  "headers": [],
                  "code": "0",
                  "message": "successful operation",
                  "hasMore": false,
                  "hasHeaders": false,
                  "isString": false,
                  "isInteger": false,
                  "isLong": false,
                  "isFloat": false,
                  "isDouble": false,
                  "isByteArray": false,
                  "isBoolean": false,
                  "isDate": false,
                  "isDateTime": false,
                  "isDefault": true,
                  "simpleType": true,
                  "primitiveType": true,
                  "isMapContainer": false,
                  "isListContainer": false,
                  "isBinary": false,
                  "isFile": false,
                  "jsonSchema": "{\n  \"description\" : \"successful operation\"\n}",
                  "vendorExtensions": {}
                }
              ],
              "imports": [
                "MainApiException"
              ],
              "vendorExtensions": {
                "x-contentType": "application/json",
                "x-accepts": "application/json",
                "x-serviceId": "logoutProfile",
                "x-serviceIduC": "LOGOUTPROFILE",
                "x-serviceId-varName": "LOGOUTPROFILE_SERVICE_ID",
                "x-isPost": false,
                "x-isGet": true,
                "x-isPut": false,
                "x-isPatch": false,
                "x-isHead": false,
                "x-isDelete": false,
                "x-serviceId-SQL": "SELECT * FROM TABLE_NAME"
              },
              "nickname": "logoutProfile",
              "operationIdLowerCase": "logoutprofile",
              "restfulShow": false,
              "restfulIndex": false,
              "restfulCreate": false,
              "restfulUpdate": false,
              "restfulDestroy": false,
              "restful": false,
              "hasBodyParam": false,
              "hasFormParams": false,
              "hasPathParams": false,
              "hasQueryParams": false,
              "hasHeaderParams": false,
              "hasExamples": false
            },
            {
              "responseHeaders": [],
              "hasAuthMethods": false,
              "hasConsumes": false,
              "hasProduces": true,
              "hasParams": true,
              "hasOptionalParams": false,
              "returnTypeIsPrimitive": false,
              "returnSimpleType": false,
              "subresourceOperation": false,
              "isMapContainer": false,
              "isListContainer": false,
              "isMultipart": false,
              "hasMore": false,
              "isResponseBinary": false,
              "isResponseFile": false,
              "hasReference": false,
              "isRestfulIndex": false,
              "isRestfulShow": false,
              "isRestfulCreate": false,
              "isRestfulUpdate": false,
              "isRestfulDestroy": false,
              "isRestful": false,
              "path": "/profile/:profilename",
              "operationId": "updateProfile",
              "httpMethod": "put",
              "summary": "Updated profile",
              "unescapedNotes": "This can only be done by the logged in profile.",
              "notes": "This can only be done by the logged in profile.",
              "baseName": "Profile",
              "produces": [
                {
                  "hasMore": "true",
                  "mediaType": "application/xml"
                },
                {
                  "hasMore": null,
                  "mediaType": "application/json"
                }
              ],
              "bodyParam": {
                "isFormParam": false,
                "isQueryParam": false,
                "isPathParam": false,
                "isHeaderParam": false,
                "isCookieParam": false,
                "isBodyParam": true,
                "hasMore": false,
                "isContainer": false,
                "secondaryParam": true,
                "isCollectionFormatMulti": false,
                "isPrimitiveType": false,
                "baseName": "body",
                "paramName": "body",
                "dataType": "Profile",
                "description": "Updated profile object",
                "unescapedDescription": "Updated profile object",
                "baseType": "Profile",
                "example": "new Profile()",
                "jsonSchema": "{\n  \"in\" : \"body\",\n  \"name\" : \"body\",\n  \"description\" : \"Updated profile object\",\n  \"required\" : true,\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/Profile\"\n  }\n}",
                "isString": false,
                "isInteger": false,
                "isLong": false,
                "isFloat": false,
                "isDouble": false,
                "isByteArray": false,
                "isBinary": false,
                "isBoolean": false,
                "isDate": false,
                "isDateTime": false,
                "isListContainer": false,
                "isMapContainer": false,
                "isFile": false,
                "notFile": false,
                "isEnum": false,
                "vendorExtensions": {},
                "hasValidation": false,
                "required": true,
                "exclusiveMaximum": false,
                "exclusiveMinimum": false,
                "uniqueItems": false
              },
              "allParams": [
                {
                  "isFormParam": false,
                  "isQueryParam": false,
                  "isPathParam": true,
                  "isHeaderParam": false,
                  "isCookieParam": false,
                  "isBodyParam": false,
                  "hasMore": true,
                  "isContainer": false,
                  "secondaryParam": false,
                  "isCollectionFormatMulti": false,
                  "isPrimitiveType": true,
                  "baseName": "profilename",
                  "paramName": "profilename",
                  "dataType": "String",
                  "description": "name that need to be deleted",
                  "unescapedDescription": "name that need to be deleted",
                  "example": "\"profilename_example\"",
                  "jsonSchema": "{\n  \"name\" : \"profilename\",\n  \"in\" : \"path\",\n  \"description\" : \"name that need to be deleted\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
                  "isString": true,
                  "isInteger": false,
                  "isLong": false,
                  "isFloat": false,
                  "isDouble": false,
                  "isByteArray": false,
                  "isBinary": false,
                  "isBoolean": false,
                  "isDate": false,
                  "isDateTime": false,
                  "isListContainer": false,
                  "isMapContainer": false,
                  "isFile": false,
                  "notFile": false,
                  "isEnum": false,
                  "vendorExtensions": {},
                  "hasValidation": false,
                  "required": true,
                  "exclusiveMaximum": false,
                  "exclusiveMinimum": false,
                  "uniqueItems": false
                },
                {
                  "isFormParam": false,
                  "isQueryParam": false,
                  "isPathParam": false,
                  "isHeaderParam": false,
                  "isCookieParam": false,
                  "isBodyParam": true,
                  "hasMore": false,
                  "isContainer": false,
                  "secondaryParam": true,
                  "isCollectionFormatMulti": false,
                  "isPrimitiveType": false,
                  "baseName": "body",
                  "paramName": "body",
                  "dataType": "Profile",
                  "description": "Updated profile object",
                  "unescapedDescription": "Updated profile object",
                  "baseType": "Profile",
                  "example": "new Profile()",
                  "jsonSchema": "{\n  \"in\" : \"body\",\n  \"name\" : \"body\",\n  \"description\" : \"Updated profile object\",\n  \"required\" : true,\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/Profile\"\n  }\n}",
                  "isString": false,
                  "isInteger": false,
                  "isLong": false,
                  "isFloat": false,
                  "isDouble": false,
                  "isByteArray": false,
                  "isBinary": false,
                  "isBoolean": false,
                  "isDate": false,
                  "isDateTime": false,
                  "isListContainer": false,
                  "isMapContainer": false,
                  "isFile": false,
                  "notFile": false,
                  "isEnum": false,
                  "vendorExtensions": {},
                  "hasValidation": false,
                  "required": true,
                  "exclusiveMaximum": false,
                  "exclusiveMinimum": false,
                  "uniqueItems": false
                }
              ],
              "bodyParams": [
                {
                  "isFormParam": false,
                  "isQueryParam": false,
                  "isPathParam": false,
                  "isHeaderParam": false,
                  "isCookieParam": false,
                  "isBodyParam": true,
                  "hasMore": false,
                  "isContainer": false,
                  "secondaryParam": false,
                  "isCollectionFormatMulti": false,
                  "isPrimitiveType": false,
                  "baseName": "body",
                  "paramName": "body",
                  "dataType": "Profile",
                  "description": "Updated profile object",
                  "unescapedDescription": "Updated profile object",
                  "baseType": "Profile",
                  "example": "new Profile()",
                  "jsonSchema": "{\n  \"in\" : \"body\",\n  \"name\" : \"body\",\n  \"description\" : \"Updated profile object\",\n  \"required\" : true,\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/Profile\"\n  }\n}",
                  "isString": false,
                  "isInteger": false,
                  "isLong": false,
                  "isFloat": false,
                  "isDouble": false,
                  "isByteArray": false,
                  "isBinary": false,
                  "isBoolean": false,
                  "isDate": false,
                  "isDateTime": false,
                  "isListContainer": false,
                  "isMapContainer": false,
                  "isFile": false,
                  "notFile": false,
                  "isEnum": false,
                  "vendorExtensions": {},
                  "hasValidation": false,
                  "required": true,
                  "exclusiveMaximum": false,
                  "exclusiveMinimum": false,
                  "uniqueItems": false
                }
              ],
              "pathParams": [
                {
                  "isFormParam": false,
                  "isQueryParam": false,
                  "isPathParam": true,
                  "isHeaderParam": false,
                  "isCookieParam": false,
                  "isBodyParam": false,
                  "hasMore": false,
                  "isContainer": false,
                  "secondaryParam": false,
                  "isCollectionFormatMulti": false,
                  "isPrimitiveType": false,
                  "baseName": "profilename",
                  "paramName": "profilename",
                  "dataType": "String",
                  "description": "name that need to be deleted",
                  "unescapedDescription": "name that need to be deleted",
                  "example": "\"profilename_example\"",
                  "jsonSchema": "{\n  \"name\" : \"profilename\",\n  \"in\" : \"path\",\n  \"description\" : \"name that need to be deleted\",\n  \"required\" : true,\n  \"type\" : \"string\"\n}",
                  "isString": true,
                  "isInteger": false,
                  "isLong": false,
                  "isFloat": false,
                  "isDouble": false,
                  "isByteArray": false,
                  "isBinary": false,
                  "isBoolean": false,
                  "isDate": false,
                  "isDateTime": false,
                  "isListContainer": false,
                  "isMapContainer": false,
                  "isFile": false,
                  "notFile": false,
                  "isEnum": false,
                  "vendorExtensions": {},
                  "hasValidation": false,
                  "required": true,
                  "exclusiveMaximum": false,
                  "exclusiveMinimum": false,
                  "uniqueItems": false
                }
              ],
              "queryParams": [],
              "headerParams": [],
              "formParams": [],
              "tags": [
                "Profile"
              ],
              "responses": [
                {
                  "headers": [],
                  "code": "400",
                  "message": "Invalid profile supplied",
                  "hasMore": true,
                  "hasHeaders": false,
                  "isString": false,
                  "isInteger": false,
                  "isLong": false,
                  "isFloat": false,
                  "isDouble": false,
                  "isByteArray": false,
                  "isBoolean": false,
                  "isDate": false,
                  "isDateTime": false,
                  "isDefault": false,
                  "simpleType": true,
                  "primitiveType": true,
                  "isMapContainer": false,
                  "isListContainer": false,
                  "isBinary": false,
                  "isFile": false,
                  "jsonSchema": "{\n  \"description\" : \"Invalid profile supplied\"\n}",
                  "vendorExtensions": {}
                },
                {
                  "headers": [],
                  "code": "404",
                  "message": "Profile not found",
                  "hasMore": false,
                  "hasHeaders": false,
                  "isString": false,
                  "isInteger": false,
                  "isLong": false,
                  "isFloat": false,
                  "isDouble": false,
                  "isByteArray": false,
                  "isBoolean": false,
                  "isDate": false,
                  "isDateTime": false,
                  "isDefault": false,
                  "simpleType": true,
                  "primitiveType": true,
                  "isMapContainer": false,
                  "isListContainer": false,
                  "isBinary": false,
                  "isFile": false,
                  "jsonSchema": "{\n  \"description\" : \"Profile not found\"\n}",
                  "vendorExtensions": {}
                }
              ],
              "imports": [
                "MainApiException",
                "Profile"
              ],
              "vendorExtensions": {
                "x-contentType": "application/json",
                "x-accepts": "application/json",
                "x-serviceId": "updateProfile",
                "x-serviceIduC": "UPDATEPROFILE",
                "x-serviceId-varName": "UPDATEPROFILE_SERVICE_ID",
                "x-isPost": false,
                "x-isGet": false,
                "x-isPut": true,
                "x-isPatch": false,
                "x-isHead": false,
                "x-isDelete": false,
                "x-serviceId-SQL": "UPDATE TABLE_NAME SET  WHERE profilename = ?"
              },
              "nickname": "updateProfile",
              "operationIdLowerCase": "updateprofile",
              "restfulShow": false,
              "restfulIndex": false,
              "restfulCreate": false,
              "restfulUpdate": false,
              "restfulDestroy": false,
              "restful": false,
              "hasBodyParam": true,
              "hasFormParams": false,
              "hasPathParams": true,
              "hasQueryParams": false,
              "hasHeaderParams": false,
              "hasExamples": false
            }
          ],
          "pathPrefix": "profile"
        },
        "java8": "true",
        "artifactId": "profile",
        "artifactDescription": "Swagger Java",
        "developerName": "Swagger",
        "scmConnection": "scm:git:git@github.com:swagger-api/swagger-codegen.git",
        "unescapedAppDescription": "Profile API definition",
        "artifactVersion": "1.0.0-SNAPSHOT",
        "appName": "Profile API",
        "scmUrl": "https://github.com/swagger-api/swagger-codegen",
        "basePath": "http://www.anket.io/api",
        "classname": "ProfileApi",
        "gitRepoId": "GIT_REPO_ID",
        "generatedDate": "2017-09-04T19:49:29.335+03:00",
        "gitUserId": "GIT_USER_ID"
      }
    ]
  },
  "fullSwagger": "{\n  \"swagger\" : \"2.0\",\n  \"info\" : {\n    \"description\" : \"Profile API definition\",\n    \"version\" : \"1.0.0\",\n    \"title\" : \"Profile API\"\n  },\n  \"host\" : \"www.anket.io\",\n  \"basePath\" : \"/api\",\n  \"tags\" : [ {\n    \"name\" : \"profile\",\n    \"description\" : \"Everything about a Profile\"\n  } ],\n  \"schemes\" : [ \"http\" ],\n  \"paths\" : {\n    \"/profile\" : {\n      \"post\" : {\n        \"tags\" : [ \"profile\" ],\n        \"summary\" : \"Create profile\",\n        \"description\" : \"This can only be done by the logged in profile.\",\n        \"operationId\" : \"create\",\n        \"produces\" : [ \"application/xml\", \"application/json\" ],\n        \"parameters\" : [ {\n          \"in\" : \"body\",\n          \"name\" : \"body\",\n          \"description\" : \"Created profile object\",\n          \"required\" : true,\n          \"schema\" : {\n            \"$ref\" : \"#/definitions/Profile\"\n          }\n        } ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"Success\"\n          },\n          \"default\" : {\n            \"description\" : \"successful operation\"\n          }\n        },\n        \"x-contentType\" : \"application/json\",\n        \"x-accepts\" : \"application/json\"\n      }\n    },\n    \"/profile/changePassword\" : {\n      \"put\" : {\n        \"tags\" : [ \"profile\" ],\n        \"summary\" : \"Change passwords of profile\",\n        \"operationId\" : \"changePassword\",\n        \"produces\" : [ \"application/xml\", \"application/json\" ],\n        \"parameters\" : [ {\n          \"name\" : \"profilename\",\n          \"in\" : \"formData\",\n          \"description\" : \"The profile name\",\n          \"required\" : true,\n          \"type\" : \"string\"\n        }, {\n          \"name\" : \"currentPassword\",\n          \"in\" : \"formData\",\n          \"description\" : \"Present password of the profile\",\n          \"required\" : true,\n          \"type\" : \"string\"\n        }, {\n          \"name\" : \"newPassword\",\n          \"in\" : \"formData\",\n          \"description\" : \"New password of the profile\",\n          \"required\" : true,\n          \"type\" : \"string\",\n          \"maxLength\" : 50,\n          \"minLength\" : 8\n        } ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"Success\"\n          },\n          \"400\" : {\n            \"description\" : \"Invalid profilename/password supplied\"\n          }\n        },\n        \"x-contentType\" : \"application/x-www-form-urlencoded\",\n        \"x-accepts\" : \"application/json\"\n      }\n    },\n    \"/profile/login\" : {\n      \"post\" : {\n        \"tags\" : [ \"profile\" ],\n        \"summary\" : \"Logs profile into the system\",\n        \"description\" : \"\",\n        \"operationId\" : \"loginProfile\",\n        \"produces\" : [ \"application/xml\", \"application/json\" ],\n        \"parameters\" : [ {\n          \"name\" : \"profilename\",\n          \"in\" : \"formData\",\n          \"description\" : \"The profile name for login\",\n          \"required\" : true,\n          \"type\" : \"string\"\n        }, {\n          \"name\" : \"password\",\n          \"in\" : \"formData\",\n          \"description\" : \"The password for login in clear text\",\n          \"required\" : true,\n          \"type\" : \"string\"\n        } ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"successful operation\",\n            \"schema\" : {\n              \"type\" : \"string\"\n            },\n            \"headers\" : {\n              \"X-Rate-Limit\" : {\n                \"type\" : \"integer\",\n                \"format\" : \"int32\",\n                \"description\" : \"calls per hour allowed by the profile\"\n              },\n              \"X-Expires-After\" : {\n                \"type\" : \"string\",\n                \"format\" : \"date-time\",\n                \"description\" : \"date in UTC when toekn expires\"\n              }\n            }\n          },\n          \"400\" : {\n            \"description\" : \"Invalid profilename/password supplied\"\n          }\n        },\n        \"x-contentType\" : \"application/x-www-form-urlencoded\",\n        \"x-accepts\" : \"application/json\"\n      }\n    },\n    \"/profile/logout\" : {\n      \"get\" : {\n        \"tags\" : [ \"profile\" ],\n        \"summary\" : \"Logs out current logged in profile session\",\n        \"description\" : \"\",\n        \"operationId\" : \"logoutProfile\",\n        \"produces\" : [ \"application/xml\", \"application/json\" ],\n        \"parameters\" : [ ],\n        \"responses\" : {\n          \"default\" : {\n            \"description\" : \"successful operation\"\n          }\n        },\n        \"x-contentType\" : \"application/json\",\n        \"x-accepts\" : \"application/json\"\n      }\n    },\n    \"/profile/{profilename}\" : {\n      \"get\" : {\n        \"tags\" : [ \"profile\" ],\n        \"summary\" : \"Get profile by profile name\",\n        \"description\" : \"\",\n        \"operationId\" : \"findProfileByProfilename\",\n        \"produces\" : [ \"application/xml\", \"application/json\" ],\n        \"parameters\" : [ {\n          \"name\" : \"profilename\",\n          \"in\" : \"path\",\n          \"description\" : \"The name that needs to be fetched. Use profile1 for testing. \",\n          \"required\" : true,\n          \"type\" : \"string\",\n          \"maximum\" : 255\n        } ],\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"successful operation\",\n            \"schema\" : {\n              \"$ref\" : \"#/definitions/Profile\"\n            }\n          },\n          \"400\" : {\n            \"description\" : \"Invalid profilename supplied\"\n          },\n          \"404\" : {\n            \"description\" : \"Profile not found\"\n          }\n        },\n        \"x-contentType\" : \"application/json\",\n        \"x-accepts\" : \"application/json\"\n      },\n      \"put\" : {\n        \"tags\" : [ \"profile\" ],\n        \"summary\" : \"Updated profile\",\n        \"description\" : \"This can only be done by the logged in profile.\",\n        \"operationId\" : \"updateProfile\",\n        \"produces\" : [ \"application/xml\", \"application/json\" ],\n        \"parameters\" : [ {\n          \"name\" : \"profilename\",\n          \"in\" : \"path\",\n          \"description\" : \"name that need to be deleted\",\n          \"required\" : true,\n          \"type\" : \"string\"\n        }, {\n          \"in\" : \"body\",\n          \"name\" : \"body\",\n          \"description\" : \"Updated profile object\",\n          \"required\" : true,\n          \"schema\" : {\n            \"$ref\" : \"#/definitions/Profile\"\n          }\n        } ],\n        \"responses\" : {\n          \"400\" : {\n            \"description\" : \"Invalid profile supplied\"\n          },\n          \"404\" : {\n            \"description\" : \"Profile not found\"\n          }\n        },\n        \"x-contentType\" : \"application/json\",\n        \"x-accepts\" : \"application/json\"\n      },\n      \"delete\" : {\n        \"tags\" : [ \"profile\" ],\n        \"summary\" : \"Delete profile\",\n        \"description\" : \"This can only be done by the logged in profile.\",\n        \"operationId\" : \"deleteProfile\",\n        \"produces\" : [ \"application/xml\", \"application/json\" ],\n        \"parameters\" : [ {\n          \"name\" : \"profilename\",\n          \"in\" : \"path\",\n          \"description\" : \"The name that needs to be deleted\",\n          \"required\" : true,\n          \"type\" : \"string\"\n        } ],\n        \"responses\" : {\n          \"400\" : {\n            \"description\" : \"Invalid profilename supplied\"\n          },\n          \"404\" : {\n            \"description\" : \"Profile not found\"\n          }\n        },\n        \"x-contentType\" : \"application/json\",\n        \"x-accepts\" : \"application/json\"\n      }\n    }\n  },\n  \"definitions\" : {\n    \"ApiResponse\" : {\n      \"type\" : \"object\",\n      \"properties\" : {\n        \"code\" : {\n          \"type\" : \"integer\",\n          \"format\" : \"int32\"\n        },\n        \"type\" : {\n          \"type\" : \"string\"\n        },\n        \"message\" : {\n          \"type\" : \"string\"\n        }\n      }\n    },\n    \"Profile\" : {\n      \"type\" : \"object\",\n      \"properties\" : {\n        \"_id\" : {\n          \"type\" : \"integer\",\n          \"format\" : \"int64\",\n          \"example\" : 12,\n          \"readOnly\" : true\n        },\n        \"profilename\" : {\n          \"type\" : \"string\"\n        },\n        \"firstName\" : {\n          \"type\" : \"string\"\n        },\n        \"lastName\" : {\n          \"type\" : \"string\"\n        },\n        \"email\" : {\n          \"type\" : \"string\"\n        },\n        \"password\" : {\n          \"type\" : \"string\",\n          \"format\" : \"pasword\"\n        },\n        \"phone\" : {\n          \"type\" : \"string\"\n        },\n        \"profileStatus\" : {\n          \"type\" : \"integer\",\n          \"format\" : \"int32\",\n          \"description\" : \"Profile Status\"\n        },\n        \"createAt\" : {\n          \"type\" : \"string\",\n          \"format\" : \"date-time\",\n          \"readOnly\" : true\n        },\n        \"updateAt\" : {\n          \"type\" : \"string\",\n          \"format\" : \"date-time\",\n          \"readOnly\" : true\n        },\n        \"age\" : {\n          \"type\" : \"integer\",\n          \"format\" : \"int32\",\n          \"minimum\" : 0,\n          \"maximum\" : 200\n        },\n        \"gender\" : {\n          \"type\" : \"string\",\n          \"default\" : \"FEMALE\",\n          \"enum\" : [ \"MALE\", \"FEMALE\" ]\n        }\n      }\n    }\n  }\n}",
  "modelDocPath": "docs/",
  "scmDeveloperConnection": "scm:git:git@github.com:swagger-api/swagger-codegen.git",
  "vertxSwaggerRouterVersion": "1.4.1-SNAPSHOT",
  "licenseUrl": "http://unlicense.org",
  "scheme": "http",
  "modelPackage": "io.swagger.server.api.model",
  "apiDocPath": "docs/",
  "serverPort": "8080",
  "basePathWithoutHost": "/api",
  "developerOrganizationUrl": "http://swagger.io",
  "java8": "true",
  "artifactId": "profile",
  "artifactDescription": "Swagger Java",
  "developerName": "Swagger",
  "scmConnection": "scm:git:git@github.com:swagger-api/swagger-codegen.git",
  "unescapedAppDescription": "Profile API definition",
  "artifactVersion": "1.0.0-SNAPSHOT",
  "appName": "Profile API",
  "scmUrl": "https://github.com/swagger-api/swagger-codegen",
  "apiPackage": "io.swagger.server.api.verticle",
  "basePath": "http://www.anket.io/api",
  "gitRepoId": "GIT_REPO_ID",
  "generatedDate": "2017-09-04T19:49:29.335+03:00",
  "gitUserId": "GIT_USER_ID"
}
