package {{invokerPackage}};

import io.vertx.core.AbstractVerticle;
import io.vertx.core.Future;
import io.vertx.core.json.JsonObject;
import io.vertx.ext.jdbc.JDBCClient;


public class JDBCVerticle extends AbstractVerticle {
    protected static final String CONFIG_JDBC_URL = "jdbc.url";
    protected static final String CONFIG_JDBC_DRIVER_CLASS = "jdbc.driver_class";
    protected static final String CONFIG_JDBC_MAX_POOL_SIZE = "jdbc.max_pool_size";

    protected JDBCClient dbClient;
    protected JsonObject dbConfig;


    public JDBCVerticle() {
    }

    public JDBCVerticle(JsonObject dbConfig) {
        this.dbConfig = dbConfig;
    }

    public JDBCVerticle(JDBCClient dbClient) {
        this.dbClient = dbClient;
    }

    @Override
    public void start(Future<Void> startFuture) throws Exception {

        if (dbClient != null)
            return;

        JsonObject defaultConfig = new JsonObject()
            .put("url", config().getString(CONFIG_JDBC_URL, "jdbc:hsqldb:file:db/wiki"))
            .put("driver_class", config().getString(CONFIG_JDBC_DRIVER_CLASS, "org.hsqldb.jdbcDriver"))
            .put("max_pool_size", config().getInteger(CONFIG_JDBC_MAX_POOL_SIZE, 30));


        dbClient = JDBCClient.createShared(vertx, dbConfig != null ? dbConfig : defaultConfig);

    }
}